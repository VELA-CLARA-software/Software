#!python3
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'rf_sol_gui.ui'
# Created by: PyQt4 UI code generator 4.11.4
# Modified by Ben

from PyQt5 import QtCore, QtGui, QtWidgets
from pyqtgraph import PlotWidget

image_credits = {
    'parasol.png': 'https://www.shareicon.net/parasol-sun-umbrella-travel-tools-and-utensils-summer-sunshade-summertime-794079',
    'Offline.png': 'http://www.iconarchive.com/show/windows-8-icons-by-icons8/Network-Disconnected-icon.html',
    'Virtual.png': 'https://thenounproject.com/search/?q=simulator&i=237636',
    'Physical.png': 'http://www.flaticon.com/free-icon/car-compact_31126#term=car&page=1&position=19',
    'mountain-summit.png': 'http://www.flaticon.com/free-icon/mountain-summit_27798#term=peak&page=1&position=6',
    'padlock-closed.png': 'https://www.iconfinder.com/icons/49855/closed_padlock_icon#size=32',
    'padlock-open.png': 'https://www.iconfinder.com/icons/49856/open_padlock_unlocked_unsecure_icon#size=32',
    'play-button.png': 'http://www.flaticon.com/free-icon/play-button_149657#term=play&page=1&position=11',
    'pause-symbol.png': 'http://www.flaticon.com/free-icon/pause-symbol_25696#term=pause&page=1&position=7',
    'Gun-400.png': 'https://www.flaticon.com/free-icon/submachine-gun_1233',
    'Gun-10.png': 'https://www.flaticon.com/free-icon/pistol_116553',
    'Linac1.png': 'https://www.flaticon.com/free-icon/man-cycling_60693',
    'car.png': 'https://www.flaticon.com/free-icon/volkswagen-car-side-view_66906',
    'jet.png': 'https://www.flaticon.com/free-icon/fighter-jet-silhouette_25431',
    'rocket.png': 'https://www.flaticon.com/free-icon/small-rocket-ship-silhouette_25452',
}


def get_icon(name):
    return QtGui.QIcon(QtGui.QPixmap(f"resources/parasol/Icons/{name}.png"))


def add_dropdown_items(dropdown, items):
    for name in items:
        if f'{name}.png' in image_credits:
            dropdown.addItem(get_icon(name), name)
        else:
            dropdown.addItem(name)


def combo_box(container, parent, items, tooltip):
    combo = QtWidgets.QComboBox(parent)
    max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
    max_fixed.setHeightForWidth(combo.sizePolicy().hasHeightForWidth())
    combo.setSizePolicy(max_fixed)
    combo.setMinimumSize(QtCore.QSize(0, 22))
    combo.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContentsOnFirstShow)
    add_dropdown_items(combo, items)
    combo.setToolTip(tooltip)
    container.addWidget(combo)
    return combo


def labelled_spinner(container, parent, text, maximum, value):
    label = QtWidgets.QLabel(parent)
    max_preferred = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
    max_preferred.setHorizontalStretch(0)
    max_preferred.setVerticalStretch(0)
    max_preferred.setHeightForWidth(label.sizePolicy().hasHeightForWidth())
    label.setSizePolicy(max_preferred)
    label.setText(text)
    container.addWidget(label)
    spinbox = QtWidgets.QDoubleSpinBox(parent)
    spinbox.setKeyboardTracking(False)
    spinbox.setDecimals(3)
    spinbox.setMaximum(maximum)
    spinbox.setValue(value)
    container.addWidget(spinbox)
    return label, spinbox

class Ui_RF_Solenoid_Tracker(object):
    def __init__(self):
        self.phase_spin = None
        self.phase_label = None
        self.phase_hbox = None
        self.momentum_spin = None
        self.momentum_label = None
        self.peak_field_spin = None
        self.peak_field_label = None
        self.gun_label = None
        self.machine_mode_dropdown = None
        self.gun_dropdown = None
        self.gun_hbox = None
        self.verticalLayout = None
        self.centralwidget = None

    def setupUi(self, rf_solenoid_tracker):
        rf_solenoid_tracker.resize(781, 699)
        rf_solenoid_tracker.setWindowIcon(get_icon('parasol'))
        self.centralwidget = QtWidgets.QWidget(rf_solenoid_tracker)
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.gun_hbox = QtWidgets.QHBoxLayout()
        self.gun_dropdown = combo_box(self.gun_hbox, self.centralwidget,
                                      ['Gun-10', 'Gun-400', 'Linac1', 'gb-rf-gun', 'gb-dc-gun'],
                                      '<html><head/><body><p>Select the RF/solenoid model to use.</p><p>'
                                      '<b>Gun-10</b>: VELA/CLARA 10 Hz gun<br><b>Linac1</b>: CLARA Linac 1<br>'
                                      '<b>gb-rf-gun</b>: Gulliford-Bazarov RF gun example<br>'
                                      '<b>gb-dc-gun</b>: Gulliford-Bazarov DC gun example</p></body></html>')
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        max_fixed.setHeightForWidth(self.gun_dropdown.sizePolicy().hasHeightForWidth())
        self.machine_mode_dropdown = combo_box(self.gun_hbox, self.centralwidget, ['Offline', 'Virtual', 'Physical'],
                                               '<html><head/><body><p>Switch between machine modes:</p><p>'
                                               '<b>Offline</b>: no interaction with machine<br>'
                                               '<b>Virtual</b>: connect to local virtual machine<br>'
                                               '<b>Physical</b>: connect to real machine via EPICS</p></body></html>')
        self.gun_label = QtWidgets.QLabel(self.centralwidget)
        self.gun_label.setSizePolicy(max_fixed)
        self.gun_label.setText("Gun")
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.gun_label.setFont(font)
        self.gun_hbox.addWidget(self.gun_label)
        self.peak_field_label, self.peak_field_spin = labelled_spinner(self.gun_hbox, self.centralwidget, "Pea&k field")
        self.peak_field_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.peak_field_spin.setKeyboardTracking(False)
        self.peak_field_spin.setDecimals(3)
        self.peak_field_spin.setMaximum(200.0)
        self.peak_field_spin.setProperty("value", 96.5)
        self.gun_hbox.addWidget(self.peak_field_spin)
        self.momentum_label = QtWidgets.QLabel(self.centralwidget)
        self.momentum_label.setSizePolicy(max_preferred)
        self.gun_hbox.addWidget(self.momentum_label)
        self.momentum_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.momentum_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.momentum_spin.setKeyboardTracking(False)
        self.momentum_spin.setDecimals(3)
        self.momentum_spin.setMaximum(1000.0)
        self.momentum_spin.setSingleStep(0.1)
        self.momentum_spin.setProperty("value", 6.888)
        self.gun_hbox.addWidget(self.momentum_spin)
        self.verticalLayout.addLayout(self.gun_hbox)
        self.phase_hbox = QtWidgets.QHBoxLayout()
        self.phase_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.phase_label.sizePolicy().hasHeightForWidth())
        self.phase_label.setSizePolicy(max_fixed)
        self.phase_hbox.addWidget(self.phase_label)
        self.phase_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.phase_spin.setStatusTip("")
        self.phase_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.phase_spin.setKeyboardTracking(False)
        self.phase_spin.setDecimals(3)
        self.phase_spin.setMinimum(-720.0)
        self.phase_spin.setMaximum(720.0)
        self.phase_spin.setSingleStep(0.1)
        self.phase_spin.setProperty("value", 330.0)
        self.phase_hbox.addWidget(self.phase_spin)
        self.off_crest_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.off_crest_label.sizePolicy().hasHeightForWidth())
        self.off_crest_label.setSizePolicy(max_fixed)
        self.phase_hbox.addWidget(self.off_crest_label)
        self.off_crest_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.off_crest_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.off_crest_spin.setKeyboardTracking(False)
        self.off_crest_spin.setDecimals(3)
        self.off_crest_spin.setMinimum(-360.0)
        self.off_crest_spin.setMaximum(360.0)
        self.off_crest_spin.setSingleStep(0.1)
        self.off_crest_spin.setProperty("value", -360.0)
        self.phase_hbox.addWidget(self.off_crest_spin)
        self.crest_button = QtWidgets.QPushButton(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.crest_button.sizePolicy().hasHeightForWidth())
        self.crest_button.setSizePolicy(max_fixed)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("resources/parasol/Icons/mountain-summit.png"), QtGui.QIcon.Normal,
                        QtGui.QIcon.Off)
        self.crest_button.setIcon(icon7)
        self.phase_hbox.addWidget(self.crest_button)
        self.lock_button = QtWidgets.QPushButton(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.lock_button.sizePolicy().hasHeightForWidth())
        self.lock_button.setSizePolicy(max_fixed)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("resources/parasol/Icons/padlock-open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon8.addPixmap(QtGui.QPixmap("resources/parasol/Icons/padlock-closed.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.lock_button.setIcon(icon8)
        self.lock_button.setCheckable(True)
        self.lock_button.setChecked(False)
        self.lock_button.setDefault(False)
        self.lock_button.setFlat(False)
        self.phase_hbox.addWidget(self.lock_button)
        self.verticalLayout.addLayout(self.phase_hbox)
        self.solenoids_hbox = QtWidgets.QHBoxLayout()
        self.solenoids_hbox.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.bc_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.bc_label.sizePolicy().hasHeightForWidth())
        self.bc_label.setSizePolicy(max_fixed)
        self.solenoids_hbox.addWidget(self.bc_label)
        self.bc_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.bc_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.bc_spin.setKeyboardTracking(False)
        self.bc_spin.setDecimals(3)
        self.bc_spin.setMinimum(0.0)
        self.bc_spin.setMaximum(8.0)
        self.bc_spin.setProperty("value", 5.0)
        self.solenoids_hbox.addWidget(self.bc_spin)
        self.sol_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.sol_label.sizePolicy().hasHeightForWidth())
        self.sol_label.setSizePolicy(max_fixed)
        self.solenoids_hbox.addWidget(self.sol_label)
        self.sol_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.sol_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.sol_spin.setKeyboardTracking(False)
        self.sol_spin.setDecimals(3)
        self.sol_spin.setMaximum(500.0)
        self.sol_spin.setProperty("value", 300.0)
        self.solenoids_hbox.addWidget(self.sol_spin)
        self.verticalLayout.addLayout(self.solenoids_hbox)
        self.fields_hbox = QtWidgets.QHBoxLayout()
        self.fields_hbox.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.cathode_field_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.cathode_field_label.sizePolicy().hasHeightForWidth())
        self.cathode_field_label.setSizePolicy(max_fixed)
        self.fields_hbox.addWidget(self.cathode_field_label)
        self.cathode_field_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.cathode_field_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.cathode_field_spin.setKeyboardTracking(False)
        self.cathode_field_spin.setDecimals(3)
        self.cathode_field_spin.setMinimum(-99.99)
        self.cathode_field_spin.setSingleStep(0.01)
        self.fields_hbox.addWidget(self.cathode_field_spin)
        self.sol_field_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.sol_field_label.sizePolicy().hasHeightForWidth())
        self.sol_field_label.setSizePolicy(max_fixed)
        self.fields_hbox.addWidget(self.sol_field_label)
        self.sol_field_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.sol_field_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.sol_field_spin.setKeyboardTracking(False)
        self.sol_field_spin.setDecimals(3)
        self.sol_field_spin.setMaximum(500.0)
        self.sol_field_spin.setSingleStep(0.01)
        self.sol_field_spin.setProperty("value", 0.432)
        self.fields_hbox.addWidget(self.sol_field_spin)
        self.larmor_angle_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.larmor_angle_label.sizePolicy().hasHeightForWidth())
        self.larmor_angle_label.setSizePolicy(max_fixed)
        self.fields_hbox.addWidget(self.larmor_angle_label)
        self.larmor_angle_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.larmor_angle_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.larmor_angle_spin.setKeyboardTracking(False)
        self.larmor_angle_spin.setDecimals(3)
        self.larmor_angle_spin.setMinimum(-1000.0)
        self.larmor_angle_spin.setMaximum(1000.0)
        self.larmor_angle_spin.setProperty("value", 100.0)
        self.fields_hbox.addWidget(self.larmor_angle_spin)
        self.verticalLayout.addLayout(self.fields_hbox)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.phase_play_button = QtWidgets.QToolButton(self.centralwidget)
        self.phase_play_button.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("resources/parasol/Icons/play-button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon9.addPixmap(QtGui.QPixmap("resources/parasol/Icons/pause-symbol.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.phase_play_button.setIcon(icon9)
        self.phase_play_button.setCheckable(True)
        self.verticalLayout_2.addWidget(self.phase_play_button)
        self.phase_slider = QtWidgets.QSlider(self.centralwidget)
        self.phase_slider.setMaximum(360)
        self.phase_slider.setOrientation(QtCore.Qt.Vertical)
        self.verticalLayout_2.addWidget(self.phase_slider)
        self.horizontalLayout_3.addLayout(self.verticalLayout_2)
        self.E_field_plot = PlotWidget(self.centralwidget)
        self.horizontalLayout_3.addWidget(self.E_field_plot)
        self.B_field_plot = PlotWidget(self.centralwidget)
        self.horizontalLayout_3.addWidget(self.B_field_plot)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.mom_la_grid = QtWidgets.QGridLayout()
        self.momentum_plot = PlotWidget(self.centralwidget)
        self.mom_la_grid.addWidget(self.momentum_plot, 0, 0, 1, 1)
        self.larmor_angle_plot = PlotWidget(self.centralwidget)
        self.mom_la_grid.addWidget(self.larmor_angle_plot, 0, 2, 1, 1)
        self.verticalLayout.addLayout(self.mom_la_grid)
        self.ustart_hbox = QtWidgets.QHBoxLayout()
        self.tracking_dropdown = QtWidgets.QComboBox(self.centralwidget)
        self.tracking_dropdown.addItem("")
        self.tracking_dropdown.addItem("")
        self.ustart_hbox.addWidget(self.tracking_dropdown)
        self.ustart_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.ustart_label.sizePolicy().hasHeightForWidth())
        self.ustart_label.setSizePolicy(max_fixed)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.ustart_label.setFont(font)
        self.ustart_hbox.addWidget(self.ustart_label)
        self.x_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.x_label.sizePolicy().hasHeightForWidth())
        self.x_label.setSizePolicy(max_fixed)
        self.ustart_hbox.addWidget(self.x_label)
        self.x_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.x_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.x_spin.setKeyboardTracking(False)
        self.x_spin.setDecimals(3)
        self.x_spin.setMinimum(-200.0)
        self.x_spin.setMaximum(200.0)
        self.x_spin.setSingleStep(0.1)
        self.x_spin.setProperty("value", 1.0)
        self.ustart_hbox.addWidget(self.x_spin)
        self.xdash_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.xdash_label.sizePolicy().hasHeightForWidth())
        self.xdash_label.setSizePolicy(max_fixed)
        self.ustart_hbox.addWidget(self.xdash_label)
        self.xdash_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.xdash_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.xdash_spin.setKeyboardTracking(False)
        self.xdash_spin.setDecimals(3)
        self.xdash_spin.setMinimum(-360.0)
        self.xdash_spin.setMaximum(720.0)
        self.xdash_spin.setSingleStep(0.1)
        self.xdash_spin.setProperty("value", 0.0)
        self.ustart_hbox.addWidget(self.xdash_spin)
        self.y_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.y_label.sizePolicy().hasHeightForWidth())
        self.y_label.setSizePolicy(max_fixed)
        self.ustart_hbox.addWidget(self.y_label)
        self.y_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.y_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.y_spin.setKeyboardTracking(False)
        self.y_spin.setDecimals(3)
        self.y_spin.setMinimum(-200.0)
        self.y_spin.setMaximum(200.0)
        self.y_spin.setSingleStep(0.1)
        self.y_spin.setProperty("value", 1.0)
        self.ustart_hbox.addWidget(self.y_spin)
        self.ydash_label = QtWidgets.QLabel(self.centralwidget)
        max_fixed = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        max_fixed.setHorizontalStretch(0)
        max_fixed.setVerticalStretch(0)
        max_fixed.setHeightForWidth(self.ydash_label.sizePolicy().hasHeightForWidth())
        self.ydash_label.setSizePolicy(max_fixed)
        self.ustart_hbox.addWidget(self.ydash_label)
        self.ydash_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.ydash_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.ydash_spin.setKeyboardTracking(False)
        self.ydash_spin.setDecimals(3)
        self.ydash_spin.setMinimum(-360.0)
        self.ydash_spin.setMaximum(720.0)
        self.ydash_spin.setSingleStep(0.1)
        self.ydash_spin.setProperty("value", 0.0)
        self.ustart_hbox.addWidget(self.ydash_spin)
        self.verticalLayout.addLayout(self.ustart_hbox)
        self.xy_plot_hbox = QtWidgets.QHBoxLayout()
        self.xy_plot = PlotWidget(self.centralwidget)
        self.xy_plot_hbox.addWidget(self.xy_plot)
        self.xdash_ydash_plot = PlotWidget(self.centralwidget)
        self.xy_plot_hbox.addWidget(self.xdash_ydash_plot)
        self.verticalLayout.addLayout(self.xy_plot_hbox)
        self.uend_label = QtWidgets.QLabel(self.centralwidget)
        self.verticalLayout.addWidget(self.uend_label)
        rf_solenoid_tracker.setCentralWidget(self.centralwidget)
        self.peak_field_label.setBuddy(self.peak_field_spin)
        self.momentum_label.setBuddy(self.momentum_spin)
        self.phase_label.setBuddy(self.phase_spin)
        self.off_crest_label.setBuddy(self.off_crest_spin)
        self.bc_label.setBuddy(self.bc_spin)
        self.sol_label.setBuddy(self.sol_spin)
        self.cathode_field_label.setBuddy(self.cathode_field_spin)
        self.sol_field_label.setBuddy(self.sol_field_spin)
        self.larmor_angle_label.setBuddy(self.larmor_angle_spin)
        self.x_label.setBuddy(self.x_spin)
        self.xdash_label.setBuddy(self.xdash_spin)
        self.y_label.setBuddy(self.y_spin)
        self.ydash_label.setBuddy(self.ydash_spin)

        self.retranslateUi(rf_solenoid_tracker)
        QtCore.QMetaObject.connectSlotsByName(rf_solenoid_tracker)

    def retranslateUi(self, RF_Solenoid_Tracker):
        RF_Solenoid_Tracker.setWindowTitle("Parasol - Combined RF & Solenoid Tracking")
        self.peak_field_spin.setToolTip("Peak accelerating field produced inside the RF cavity")
        self.peak_field_spin.setSuffix(" MV/m")
        self.momentum_label.setText("Fi&nal momentum")
        self.momentum_spin.setToolTip("Final momentum of a particle after traversing the RF cavity")
        self.momentum_spin.setSuffix(" MeV/c")
        self.phase_label.setText("&Phase")
        self.phase_spin.setToolTip("Phase between injected electron and the RF cavity")
        self.phase_spin.setSuffix(" °")
        self.off_crest_label.setText("&Off-crest")
        self.off_crest_spin.setToolTip(
            "<html><head/><body><p>Phase relative to off-crest value, or (unknown) when the crest phase is unknown.</p></body></html>")
        self.off_crest_spin.setSpecialValueText("(unknown)")
        self.off_crest_spin.setPrefix("+")
        self.off_crest_spin.setSuffix(" °")
        self.crest_button.setToolTip("Adjust the phase to produce the maximum momentum")
        self.crest_button.setText("&Crest")
        self.lock_button.setToolTip("Re-crest and keep the off-crest value when the RF peak field changes")
        self.lock_button.setText("Lo&ck")
        self.bc_label.setText("&Bucking coil current")
        self.bc_spin.setSuffix(" A")
        self.sol_label.setText("&Solenoid current")
        self.sol_spin.setSuffix(" A")
        self.cathode_field_label.setText("&Field at cathode")
        self.cathode_field_spin.setToolTip(
            "Use the combined BC and solenoid field map to calculate the field at the cathode")
        self.cathode_field_spin.setSuffix(" T")
        self.sol_field_label.setText("Solenoid &maximum field")
        self.sol_field_spin.setToolTip("Peak field in the solenoid")
        self.sol_field_spin.setSuffix(" T")
        self.larmor_angle_label.setText("Final &Larmor angle")
        self.larmor_angle_spin.setToolTip(
            "Final Larmor angle of the particle after traversing the RF cavity and solenoid")
        self.larmor_angle_spin.setSuffix(" °")
        self.phase_play_button.setToolTip(
            "<html><head/><body><p>Play an animation of the linac phase</p></body></html>")
        self.phase_slider.setToolTip(
            "<html><head/><body><p><span style=\" font-weight:600;\">Linac phase</span> - use this to cycle through the displayed RF phase. This has no effect on the calculation.</p></body></html>")
        self.tracking_dropdown.setItemText(0, "Single particle")
        self.tracking_dropdown.setItemText(1, "Beam")
        self.ustart_label.setText("Initial particle position")
        self.x_label.setText("&x")
        self.x_spin.setToolTip("Initial horizontal position of the particle")
        self.x_spin.setSuffix(" mm")
        self.xdash_label.setText("x\'")
        self.xdash_spin.setToolTip("Initial horizontal angle of the particle")
        self.xdash_spin.setSuffix(" mrad")
        self.y_label.setText("&y")
        self.y_spin.setToolTip("Initial vertical position of the particle")
        self.y_spin.setSuffix(" mm")
        self.ydash_label.setText("y\'")
        self.ydash_spin.setToolTip("Initial vertical angle of the particle")
        self.ydash_spin.setSuffix(" mrad")
        self.uend_label.setText(
            "<html><head/><body><p><span style=\" font-weight:600;\">Final particle position</span> x 0.001 mm, x\' 1.234 mrad; y -0.567 mm, y\' 8.901 mrad</p></body></html>")
