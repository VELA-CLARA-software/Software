# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'rf_sol_gui.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtWidgets.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtWidgets.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtWidgets.QApplication.translate(context, text, disambig)

class Ui_RF_Solenoid_Tracker(object):
    def setupUi(self, RF_Solenoid_Tracker):
        RF_Solenoid_Tracker.setObjectName(_fromUtf8("RF_Solenoid_Tracker"))
        RF_Solenoid_Tracker.resize(781, 699)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/parasol.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        RF_Solenoid_Tracker.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(RF_Solenoid_Tracker)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.gun_hbox = QtWidgets.QHBoxLayout()
        self.gun_hbox.setObjectName(_fromUtf8("gun_hbox"))
        self.gun_dropdown = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gun_dropdown.sizePolicy().hasHeightForWidth())
        self.gun_dropdown.setSizePolicy(sizePolicy)
        self.gun_dropdown.setMinimumSize(QtCore.QSize(0, 22))
        self.gun_dropdown.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContentsOnFirstShow)
        self.gun_dropdown.setObjectName(_fromUtf8("gun_dropdown"))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/pistol.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.gun_dropdown.addItem(icon1, _fromUtf8(""))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/submachine-gun.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.gun_dropdown.addItem(icon2, _fromUtf8(""))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/bike.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.gun_dropdown.addItem(icon3, _fromUtf8(""))
        self.gun_dropdown.addItem(_fromUtf8(""))
        self.gun_dropdown.addItem(_fromUtf8(""))
        self.gun_hbox.addWidget(self.gun_dropdown)
        self.machine_mode_dropdown = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.machine_mode_dropdown.sizePolicy().hasHeightForWidth())
        self.machine_mode_dropdown.setSizePolicy(sizePolicy)
        self.machine_mode_dropdown.setObjectName(_fromUtf8("machine_mode_dropdown"))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/Offline.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.machine_mode_dropdown.addItem(icon4, _fromUtf8(""))
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/Virtual.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.machine_mode_dropdown.addItem(icon5, _fromUtf8(""))
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/Physical.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.machine_mode_dropdown.addItem(icon6, _fromUtf8(""))
        self.gun_hbox.addWidget(self.machine_mode_dropdown)
        self.gun_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gun_label.sizePolicy().hasHeightForWidth())
        self.gun_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.gun_label.setFont(font)
        self.gun_label.setObjectName(_fromUtf8("gun_label"))
        self.gun_hbox.addWidget(self.gun_label)
        self.peak_field_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.peak_field_label.sizePolicy().hasHeightForWidth())
        self.peak_field_label.setSizePolicy(sizePolicy)
        self.peak_field_label.setObjectName(_fromUtf8("peak_field_label"))
        self.gun_hbox.addWidget(self.peak_field_label)
        self.peak_field_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.peak_field_spin.setKeyboardTracking(False)
        self.peak_field_spin.setDecimals(3)
        self.peak_field_spin.setMaximum(200.0)
        self.peak_field_spin.setProperty("value", 96.5)
        self.peak_field_spin.setObjectName(_fromUtf8("peak_field_spin"))
        self.gun_hbox.addWidget(self.peak_field_spin)
        self.momentum_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.momentum_label.sizePolicy().hasHeightForWidth())
        self.momentum_label.setSizePolicy(sizePolicy)
        self.momentum_label.setObjectName(_fromUtf8("momentum_label"))
        self.gun_hbox.addWidget(self.momentum_label)
        self.momentum_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.momentum_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.momentum_spin.setKeyboardTracking(False)
        self.momentum_spin.setDecimals(3)
        self.momentum_spin.setMaximum(1000.0)
        self.momentum_spin.setSingleStep(0.1)
        self.momentum_spin.setProperty("value", 6.888)
        self.momentum_spin.setObjectName(_fromUtf8("momentum_spin"))
        self.gun_hbox.addWidget(self.momentum_spin)
        self.verticalLayout.addLayout(self.gun_hbox)
        self.phase_hbox = QtWidgets.QHBoxLayout()
        self.phase_hbox.setObjectName(_fromUtf8("phase_hbox"))
        self.phase_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.phase_label.sizePolicy().hasHeightForWidth())
        self.phase_label.setSizePolicy(sizePolicy)
        self.phase_label.setObjectName(_fromUtf8("phase_label"))
        self.phase_hbox.addWidget(self.phase_label)
        self.phase_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.phase_spin.setStatusTip(_fromUtf8(""))
        self.phase_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.phase_spin.setKeyboardTracking(False)
        self.phase_spin.setDecimals(3)
        self.phase_spin.setMinimum(-720.0)
        self.phase_spin.setMaximum(720.0)
        self.phase_spin.setSingleStep(0.1)
        self.phase_spin.setProperty("value", 330.0)
        self.phase_spin.setObjectName(_fromUtf8("phase_spin"))
        self.phase_hbox.addWidget(self.phase_spin)
        self.off_crest_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.off_crest_label.sizePolicy().hasHeightForWidth())
        self.off_crest_label.setSizePolicy(sizePolicy)
        self.off_crest_label.setObjectName(_fromUtf8("off_crest_label"))
        self.phase_hbox.addWidget(self.off_crest_label)
        self.off_crest_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.off_crest_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.off_crest_spin.setKeyboardTracking(False)
        self.off_crest_spin.setDecimals(3)
        self.off_crest_spin.setMinimum(-360.0)
        self.off_crest_spin.setMaximum(360.0)
        self.off_crest_spin.setSingleStep(0.1)
        self.off_crest_spin.setProperty("value", -360.0)
        self.off_crest_spin.setObjectName(_fromUtf8("off_crest_spin"))
        self.phase_hbox.addWidget(self.off_crest_spin)
        self.crest_button = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crest_button.sizePolicy().hasHeightForWidth())
        self.crest_button.setSizePolicy(sizePolicy)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/mountain-summit.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.crest_button.setIcon(icon7)
        self.crest_button.setObjectName(_fromUtf8("crest_button"))
        self.phase_hbox.addWidget(self.crest_button)
        self.lock_button = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lock_button.sizePolicy().hasHeightForWidth())
        self.lock_button.setSizePolicy(sizePolicy)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/padlock-open.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/padlock-closed.png")), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.lock_button.setIcon(icon8)
        self.lock_button.setCheckable(True)
        self.lock_button.setChecked(False)
        self.lock_button.setDefault(False)
        self.lock_button.setFlat(False)
        self.lock_button.setObjectName(_fromUtf8("lock_button"))
        self.phase_hbox.addWidget(self.lock_button)
        self.verticalLayout.addLayout(self.phase_hbox)
        self.solenoids_hbox = QtWidgets.QHBoxLayout()
        self.solenoids_hbox.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.solenoids_hbox.setObjectName(_fromUtf8("solenoids_hbox"))
        self.bc_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bc_label.sizePolicy().hasHeightForWidth())
        self.bc_label.setSizePolicy(sizePolicy)
        self.bc_label.setObjectName(_fromUtf8("bc_label"))
        self.solenoids_hbox.addWidget(self.bc_label)
        self.bc_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.bc_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.bc_spin.setKeyboardTracking(False)
        self.bc_spin.setDecimals(3)
        self.bc_spin.setMinimum(0.0)
        self.bc_spin.setMaximum(8.0)
        self.bc_spin.setProperty("value", 5.0)
        self.bc_spin.setObjectName(_fromUtf8("bc_spin"))
        self.solenoids_hbox.addWidget(self.bc_spin)
        self.sol_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sol_label.sizePolicy().hasHeightForWidth())
        self.sol_label.setSizePolicy(sizePolicy)
        self.sol_label.setObjectName(_fromUtf8("sol_label"))
        self.solenoids_hbox.addWidget(self.sol_label)
        self.sol_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.sol_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.sol_spin.setKeyboardTracking(False)
        self.sol_spin.setDecimals(3)
        self.sol_spin.setMaximum(500.0)
        self.sol_spin.setProperty("value", 300.0)
        self.sol_spin.setObjectName(_fromUtf8("sol_spin"))
        self.solenoids_hbox.addWidget(self.sol_spin)
        self.verticalLayout.addLayout(self.solenoids_hbox)
        self.fields_hbox = QtWidgets.QHBoxLayout()
        self.fields_hbox.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.fields_hbox.setObjectName(_fromUtf8("fields_hbox"))
        self.cathode_field_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cathode_field_label.sizePolicy().hasHeightForWidth())
        self.cathode_field_label.setSizePolicy(sizePolicy)
        self.cathode_field_label.setObjectName(_fromUtf8("cathode_field_label"))
        self.fields_hbox.addWidget(self.cathode_field_label)
        self.cathode_field_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.cathode_field_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.cathode_field_spin.setKeyboardTracking(False)
        self.cathode_field_spin.setDecimals(3)
        self.cathode_field_spin.setMinimum(-99.99)
        self.cathode_field_spin.setSingleStep(0.01)
        self.cathode_field_spin.setObjectName(_fromUtf8("cathode_field_spin"))
        self.fields_hbox.addWidget(self.cathode_field_spin)
        self.sol_field_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sol_field_label.sizePolicy().hasHeightForWidth())
        self.sol_field_label.setSizePolicy(sizePolicy)
        self.sol_field_label.setObjectName(_fromUtf8("sol_field_label"))
        self.fields_hbox.addWidget(self.sol_field_label)
        self.sol_field_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.sol_field_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.sol_field_spin.setKeyboardTracking(False)
        self.sol_field_spin.setDecimals(3)
        self.sol_field_spin.setMaximum(500.0)
        self.sol_field_spin.setSingleStep(0.01)
        self.sol_field_spin.setProperty("value", 0.432)
        self.sol_field_spin.setObjectName(_fromUtf8("sol_field_spin"))
        self.fields_hbox.addWidget(self.sol_field_spin)
        self.larmor_angle_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.larmor_angle_label.sizePolicy().hasHeightForWidth())
        self.larmor_angle_label.setSizePolicy(sizePolicy)
        self.larmor_angle_label.setObjectName(_fromUtf8("larmor_angle_label"))
        self.fields_hbox.addWidget(self.larmor_angle_label)
        self.larmor_angle_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.larmor_angle_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.larmor_angle_spin.setKeyboardTracking(False)
        self.larmor_angle_spin.setDecimals(3)
        self.larmor_angle_spin.setMinimum(-1000.0)
        self.larmor_angle_spin.setMaximum(1000.0)
        self.larmor_angle_spin.setProperty("value", 100.0)
        self.larmor_angle_spin.setObjectName(_fromUtf8("larmor_angle_spin"))
        self.fields_hbox.addWidget(self.larmor_angle_spin)
        self.verticalLayout.addLayout(self.fields_hbox)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.phase_play_button = QtWidgets.QToolButton(self.centralwidget)
        self.phase_play_button.setText(_fromUtf8(""))
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/play-button.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon9.addPixmap(QtGui.QPixmap(_fromUtf8("resources/parasol/Icons/pause-symbol.png")), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.phase_play_button.setIcon(icon9)
        self.phase_play_button.setCheckable(True)
        self.phase_play_button.setObjectName(_fromUtf8("phase_play_button"))
        self.verticalLayout_2.addWidget(self.phase_play_button)
        self.phase_slider = QtWidgets.QSlider(self.centralwidget)
        self.phase_slider.setMaximum(360)
        self.phase_slider.setOrientation(QtCore.Qt.Vertical)
        self.phase_slider.setObjectName(_fromUtf8("phase_slider"))
        self.verticalLayout_2.addWidget(self.phase_slider)
        self.horizontalLayout_3.addLayout(self.verticalLayout_2)
        self.E_field_plot = PlotWidget(self.centralwidget)
        self.E_field_plot.setObjectName(_fromUtf8("E_field_plot"))
        self.horizontalLayout_3.addWidget(self.E_field_plot)
        self.B_field_plot = PlotWidget(self.centralwidget)
        self.B_field_plot.setObjectName(_fromUtf8("B_field_plot"))
        self.horizontalLayout_3.addWidget(self.B_field_plot)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.mom_la_grid = QtWidgets.QGridLayout()
        self.mom_la_grid.setObjectName(_fromUtf8("mom_la_grid"))
        self.momentum_plot = PlotWidget(self.centralwidget)
        self.momentum_plot.setObjectName(_fromUtf8("momentum_plot"))
        self.mom_la_grid.addWidget(self.momentum_plot, 0, 0, 1, 1)
        self.larmor_angle_plot = PlotWidget(self.centralwidget)
        self.larmor_angle_plot.setObjectName(_fromUtf8("larmor_angle_plot"))
        self.mom_la_grid.addWidget(self.larmor_angle_plot, 0, 2, 1, 1)
        self.verticalLayout.addLayout(self.mom_la_grid)
        self.ustart_hbox = QtWidgets.QHBoxLayout()
        self.ustart_hbox.setObjectName(_fromUtf8("ustart_hbox"))
        self.tracking_dropdown = QtWidgets.QComboBox(self.centralwidget)
        self.tracking_dropdown.setObjectName(_fromUtf8("tracking_dropdown"))
        self.tracking_dropdown.addItem(_fromUtf8(""))
        self.tracking_dropdown.addItem(_fromUtf8(""))
        self.ustart_hbox.addWidget(self.tracking_dropdown)
        self.ustart_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ustart_label.sizePolicy().hasHeightForWidth())
        self.ustart_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.ustart_label.setFont(font)
        self.ustart_label.setObjectName(_fromUtf8("ustart_label"))
        self.ustart_hbox.addWidget(self.ustart_label)
        self.x_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.x_label.sizePolicy().hasHeightForWidth())
        self.x_label.setSizePolicy(sizePolicy)
        self.x_label.setObjectName(_fromUtf8("x_label"))
        self.ustart_hbox.addWidget(self.x_label)
        self.x_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.x_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.x_spin.setKeyboardTracking(False)
        self.x_spin.setDecimals(3)
        self.x_spin.setMinimum(-200.0)
        self.x_spin.setMaximum(200.0)
        self.x_spin.setSingleStep(0.1)
        self.x_spin.setProperty("value", 1.0)
        self.x_spin.setObjectName(_fromUtf8("x_spin"))
        self.ustart_hbox.addWidget(self.x_spin)
        self.xdash_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.xdash_label.sizePolicy().hasHeightForWidth())
        self.xdash_label.setSizePolicy(sizePolicy)
        self.xdash_label.setObjectName(_fromUtf8("xdash_label"))
        self.ustart_hbox.addWidget(self.xdash_label)
        self.xdash_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.xdash_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.xdash_spin.setKeyboardTracking(False)
        self.xdash_spin.setDecimals(3)
        self.xdash_spin.setMinimum(-360.0)
        self.xdash_spin.setMaximum(720.0)
        self.xdash_spin.setSingleStep(0.1)
        self.xdash_spin.setProperty("value", 0.0)
        self.xdash_spin.setObjectName(_fromUtf8("xdash_spin"))
        self.ustart_hbox.addWidget(self.xdash_spin)
        self.y_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.y_label.sizePolicy().hasHeightForWidth())
        self.y_label.setSizePolicy(sizePolicy)
        self.y_label.setObjectName(_fromUtf8("y_label"))
        self.ustart_hbox.addWidget(self.y_label)
        self.y_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.y_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.y_spin.setKeyboardTracking(False)
        self.y_spin.setDecimals(3)
        self.y_spin.setMinimum(-200.0)
        self.y_spin.setMaximum(200.0)
        self.y_spin.setSingleStep(0.1)
        self.y_spin.setProperty("value", 1.0)
        self.y_spin.setObjectName(_fromUtf8("y_spin"))
        self.ustart_hbox.addWidget(self.y_spin)
        self.ydash_label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ydash_label.sizePolicy().hasHeightForWidth())
        self.ydash_label.setSizePolicy(sizePolicy)
        self.ydash_label.setObjectName(_fromUtf8("ydash_label"))
        self.ustart_hbox.addWidget(self.ydash_label)
        self.ydash_spin = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.ydash_spin.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.ydash_spin.setKeyboardTracking(False)
        self.ydash_spin.setDecimals(3)
        self.ydash_spin.setMinimum(-360.0)
        self.ydash_spin.setMaximum(720.0)
        self.ydash_spin.setSingleStep(0.1)
        self.ydash_spin.setProperty("value", 0.0)
        self.ydash_spin.setObjectName(_fromUtf8("ydash_spin"))
        self.ustart_hbox.addWidget(self.ydash_spin)
        self.verticalLayout.addLayout(self.ustart_hbox)
        self.xy_plot_hbox = QtWidgets.QHBoxLayout()
        self.xy_plot_hbox.setObjectName(_fromUtf8("xy_plot_hbox"))
        self.xy_plot = PlotWidget(self.centralwidget)
        self.xy_plot.setObjectName(_fromUtf8("xy_plot"))
        self.xy_plot_hbox.addWidget(self.xy_plot)
        self.xdash_ydash_plot = PlotWidget(self.centralwidget)
        self.xdash_ydash_plot.setObjectName(_fromUtf8("xdash_ydash_plot"))
        self.xy_plot_hbox.addWidget(self.xdash_ydash_plot)
        self.verticalLayout.addLayout(self.xy_plot_hbox)
        self.uend_label = QtWidgets.QLabel(self.centralwidget)
        self.uend_label.setObjectName(_fromUtf8("uend_label"))
        self.verticalLayout.addWidget(self.uend_label)
        RF_Solenoid_Tracker.setCentralWidget(self.centralwidget)
        self.peak_field_label.setBuddy(self.peak_field_spin)
        self.momentum_label.setBuddy(self.momentum_spin)
        self.phase_label.setBuddy(self.phase_spin)
        self.off_crest_label.setBuddy(self.off_crest_spin)
        self.bc_label.setBuddy(self.bc_spin)
        self.sol_label.setBuddy(self.sol_spin)
        self.cathode_field_label.setBuddy(self.cathode_field_spin)
        self.sol_field_label.setBuddy(self.sol_field_spin)
        self.larmor_angle_label.setBuddy(self.larmor_angle_spin)
        self.x_label.setBuddy(self.x_spin)
        self.xdash_label.setBuddy(self.xdash_spin)
        self.y_label.setBuddy(self.y_spin)
        self.ydash_label.setBuddy(self.ydash_spin)

        self.retranslateUi(RF_Solenoid_Tracker)
        QtCore.QMetaObject.connectSlotsByName(RF_Solenoid_Tracker)

    def retranslateUi(self, RF_Solenoid_Tracker):
        RF_Solenoid_Tracker.setWindowTitle(_translate("RF_Solenoid_Tracker", "Parasol - Combined RF & Solenoid Tracking", None))
        self.gun_dropdown.setToolTip(_translate("RF_Solenoid_Tracker", "<html><head/><body><p>Select the RF/solenoid model to use.</p><p><span style=\" font-weight:600;\">Gun-10</span>: VELA/CLARA 10 Hz gun</p><p><span style=\" font-weight:600;\">Linac1</span>: CLARA Linac 1</p><p><span style=\" font-weight:600;\">gb-rf-gun</span>: Gulliford-Bazarov RF gun example</p><p><span style=\" font-weight:600;\">gb-dc-gun</span>: Gulliford-Bazarov DC gun example</p></body></html>", None))
        self.gun_dropdown.setItemText(0, _translate("RF_Solenoid_Tracker", "Gun-10", None))
        self.gun_dropdown.setItemText(1, _translate("RF_Solenoid_Tracker", "Gun-400", None))
        self.gun_dropdown.setItemText(2, _translate("RF_Solenoid_Tracker", "Linac1", None))
        self.gun_dropdown.setItemText(3, _translate("RF_Solenoid_Tracker", "gb-rf-gun", None))
        self.gun_dropdown.setItemText(4, _translate("RF_Solenoid_Tracker", "gb-dc-gun", None))
        self.machine_mode_dropdown.setToolTip(_translate("RF_Solenoid_Tracker", "<html><head/><body><p>Switch between machine modes:</p><p><span style=\" font-weight:600;\">Offline</span>: no interaction with machine</p><p><span style=\" font-weight:600;\">Virtual</span>: connect to local virtual machine</p><p><span style=\" font-weight:600;\">Physical</span>: connect to real machine via EPICS</p></body></html>", None))
        self.machine_mode_dropdown.setItemText(0, _translate("RF_Solenoid_Tracker", "Offline", None))
        self.machine_mode_dropdown.setItemText(1, _translate("RF_Solenoid_Tracker", "Virtual", None))
        self.machine_mode_dropdown.setItemText(2, _translate("RF_Solenoid_Tracker", "Physical", None))
        self.gun_label.setText(_translate("RF_Solenoid_Tracker", "Gun", None))
        self.peak_field_label.setText(_translate("RF_Solenoid_Tracker", "Pea&k field", None))
        self.peak_field_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Peak accelerating field produced inside the RF cavity", None))
        self.peak_field_spin.setSuffix(_translate("RF_Solenoid_Tracker", " MV/m", None))
        self.momentum_label.setText(_translate("RF_Solenoid_Tracker", "Fi&nal momentum", None))
        self.momentum_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Final momentum of a particle after traversing the RF cavity", None))
        self.momentum_spin.setSuffix(_translate("RF_Solenoid_Tracker", " MeV/c", None))
        self.phase_label.setText(_translate("RF_Solenoid_Tracker", "&Phase", None))
        self.phase_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Phase between injected electron and the RF cavity", None))
        self.phase_spin.setSuffix(_translate("RF_Solenoid_Tracker", " °", None))
        self.off_crest_label.setText(_translate("RF_Solenoid_Tracker", "&Off-crest", None))
        self.off_crest_spin.setToolTip(_translate("RF_Solenoid_Tracker", "<html><head/><body><p>Phase relative to off-crest value, or (unknown) when the crest phase is unknown.</p></body></html>", None))
        self.off_crest_spin.setSpecialValueText(_translate("RF_Solenoid_Tracker", "(unknown)", None))
        self.off_crest_spin.setPrefix(_translate("RF_Solenoid_Tracker", "+", None))
        self.off_crest_spin.setSuffix(_translate("RF_Solenoid_Tracker", " °", None))
        self.crest_button.setToolTip(_translate("RF_Solenoid_Tracker", "Adjust the phase to produce the maximum momentum", None))
        self.crest_button.setText(_translate("RF_Solenoid_Tracker", "&Crest", None))
        self.lock_button.setToolTip(_translate("RF_Solenoid_Tracker", "Re-crest and keep the off-crest value when the RF peak field changes", None))
        self.lock_button.setText(_translate("RF_Solenoid_Tracker", "Lo&ck", None))
        self.bc_label.setText(_translate("RF_Solenoid_Tracker", "&Bucking coil current", None))
        self.bc_spin.setSuffix(_translate("RF_Solenoid_Tracker", " A", None))
        self.sol_label.setText(_translate("RF_Solenoid_Tracker", "&Solenoid current", None))
        self.sol_spin.setSuffix(_translate("RF_Solenoid_Tracker", " A", None))
        self.cathode_field_label.setText(_translate("RF_Solenoid_Tracker", "&Field at cathode", None))
        self.cathode_field_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Use the combined BC and solenoid field map to calculate the field at the cathode", None))
        self.cathode_field_spin.setSuffix(_translate("RF_Solenoid_Tracker", " T", None))
        self.sol_field_label.setText(_translate("RF_Solenoid_Tracker", "Solenoid &maximum field", None))
        self.sol_field_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Peak field in the solenoid", None))
        self.sol_field_spin.setSuffix(_translate("RF_Solenoid_Tracker", " T", None))
        self.larmor_angle_label.setText(_translate("RF_Solenoid_Tracker", "Final &Larmor angle", None))
        self.larmor_angle_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Final Larmor angle of the particle after traversing the RF cavity and solenoid", None))
        self.larmor_angle_spin.setSuffix(_translate("RF_Solenoid_Tracker", " °", None))
        self.phase_play_button.setToolTip(_translate("RF_Solenoid_Tracker", "<html><head/><body><p>Play an animation of the linac phase</p></body></html>", None))
        self.phase_slider.setToolTip(_translate("RF_Solenoid_Tracker", "<html><head/><body><p><span style=\" font-weight:600;\">Linac phase</span> - use this to cycle through the displayed RF phase. This has no effect on the calculation.</p></body></html>", None))
        self.tracking_dropdown.setItemText(0, _translate("RF_Solenoid_Tracker", "Single particle", None))
        self.tracking_dropdown.setItemText(1, _translate("RF_Solenoid_Tracker", "Beam", None))
        self.ustart_label.setText(_translate("RF_Solenoid_Tracker", "Initial particle position", None))
        self.x_label.setText(_translate("RF_Solenoid_Tracker", "&x", None))
        self.x_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Initial horizontal position of the particle", None))
        self.x_spin.setSuffix(_translate("RF_Solenoid_Tracker", " mm", None))
        self.xdash_label.setText(_translate("RF_Solenoid_Tracker", "x\'", None))
        self.xdash_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Initial horizontal angle of the particle", None))
        self.xdash_spin.setSuffix(_translate("RF_Solenoid_Tracker", " mrad", None))
        self.y_label.setText(_translate("RF_Solenoid_Tracker", "&y", None))
        self.y_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Initial vertical position of the particle", None))
        self.y_spin.setSuffix(_translate("RF_Solenoid_Tracker", " mm", None))
        self.ydash_label.setText(_translate("RF_Solenoid_Tracker", "y\'", None))
        self.ydash_spin.setToolTip(_translate("RF_Solenoid_Tracker", "Initial vertical angle of the particle", None))
        self.ydash_spin.setSuffix(_translate("RF_Solenoid_Tracker", " mrad", None))
        self.uend_label.setText(_translate("RF_Solenoid_Tracker", "<html><head/><body><p><span style=\" font-weight:600;\">Final particle position</span> x 0.001 mm, x\' 1.234 mrad; y -0.567 mm, y\' 8.901 mrad</p></body></html>", None))

from pyqtgraph import PlotWidget
