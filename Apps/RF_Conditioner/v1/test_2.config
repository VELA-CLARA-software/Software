##  __   ___     __   __        __    ___    __               __  
## |__) |__     /  ` /  \ |\ | |  \ |  |  | /  \ |\ | | |\ | / _` 
## |  \ |       \__, \__/ | \| |__/ |  |  | \__/ | \| | | \| \__> 
##                                                               
## CONFIG FILE VERSION 1.0, djs
##
## Only change this file if you know what you are doing, 
## A FUTURE VERSION SHOULD MIGRATE TO YAML 
## 
## 
## 
## comments
## ; end of line
## , denotes list
## all whitespace trimmed, except string literal
## "___" string literal 
## general format:
## 		key = value
## the reader needs to know all keys and values
## (at a minimum how to convert to numbers etc)
##
## the RF trace shorthand naming scheme
## KRPOW = "KLYSTRON_REVERSE_POWER"
## KRPHA = "KLYSTRON_REVERSE_PHASE"
## KFPOW = "KLYSTRON_FORWARD_POWER"
## KFPHA = "KLYSTRON_FORWARD_PHASE"
## CRPOW = "CAVITY_REVERSE_POWER"
## CRPHA = "CAVITY_REVERSE_PHASE"
## CPPOW = "CAVITY_PROBE_POWER"
## CPPHA = "CAVITY_PROBE_PHASE"
## CFPOW = "CAVITY_FORWARD_POWER"
## CFPHA = "CAVITY_FORWARD_PHASE"
##
## ;Which rf structure is this config file for (****must***** match HWC name)
##
RF_STRUCTURE=VELA_HRRG

## MAIN PARAMETERS
##
TIME_BETWEEN_RF_INCREASES=10;seconds
RF_INCREASE_LEVEL=0.001;kw (KLYSTRON FORWARD POWER ESTIMATE)
DEFAULT_RF_INCREASE_LEVEL=10;LLRF AMPLITUDE units
DEFAULT_PULSE_COUNT=500;how many pulses to wait before next step
POWER_AIM= 0.1; MW watts
PULSE_LENGTH_START=100; ns !! NOT us
PULSE_LENGTH_AIM= 2500; ns !! NOT us
PULSE_LENGTH_STEP= 250; ns !! NOT us
BREAKDOWN_RATE_AIM=100; per million active pulses 

## 
##
LLRF_CHECK_TIME=50;ms to check main llrf parameters

RF_REPETITION_RATE=10;Hertz
RF_INCREASE_RATE=0.33333; Watts per second aim (approx)
NORMAL_POWER_INCREASE=10000;Watts normalstep size
LOW_POWER_INCREASE=1000;Watts, step size at low power
LOW_POWER_INCREASE_RATE_LIMIT=1000000;Watts. definition of low/normal power for _POWER_INCREASE tags
NUMBER_OF_PULSES_IN_BREAKDOWN_HISTORY=1000000;how many pulses to count 
NUM_BUFFER_TRACES=500; number of traces in history, dumped on vac-spike

##
## TRACE MEAN VALUES
## 
## ;A mean value between two times can can be calculated for up to 6 traces 
## ;These are **just** for monitoring/logging** 
## ;the mean values are NOT used in any other routines
##
## ;Which traces to find means for?
##
MEAN_TRACES = KLYSTRON_FORWARD_POWER,KLYSTRON_REVERSE_POWER,CAVITY_FORWARD_POWER,CAVITY_REVERSE_POWER,CAVITY_REVERSE_PHASE,CAVITY_PROBE_POWER
##
## ;Start and stop times over which to calcualte the mean 
## ;(indices defined by the order of MEAN_TRACES)
## ; all times are in us from pulse start
##
## KLYSTRON_FORWARD_POWER
1_MEAN_START=1.0;in us, time from pulse start
1_MEAN_END  =1.4;in us, time from pulse start
## KLYSTRON_REVERSE_POWER
2_MEAN_START=1.0;in us, time from pulse start
2_MEAN_END  =1.4;in us, time from pulse starts
## CAVITY_FORWARD_POWER
3_MEAN_START=1.0;in us, time from pulse start
3_MEAN_END  =1.4;in us, time from pulse start
## CAVITY_REVERSE_POWER
4_MEAN_START=1.5;in us, time from pulse start
4_MEAN_END  =1.6;in us, time from pulse start
## CAVITY_REVERSE_PHASE
5_MEAN_START=1.0;in us, time from pulse start
5_MEAN_END  =1.4;in us, time from pulse start
## CAVITY_PROBE_POWER
6_MEAN_START=1.5;in us, time from pulse start
6_MEAN_END  =1.6;in us, time from pulse start




##
## 
## 
## breakdown / outside_mask traces
## BREAKDOWN_TRACES=CAVITY_FORWARD_POWER,CAVITY_REVERSE_POWER;

##BREAKDOWN_TRACES=CAVITY_REVERSE_PHASE,CAVITY_FORWARD_PHASE,CAVITY_PROBE_PHASE,CAVITY_REVERSE_POWER,CAVITY_FORWARD_POWER,CAVITY_PROBE_POWER;
BREAKDOWN_TRACES=CAVITY_REVERSE_PHASE,CAVITY_FORWARD_PHASE,CAVITY_PROBE_PHASE;
OUTSIDE_MASK_CHECK_TIME = 100; ms between outside_mask_trace checks
TRACES_TO_SAVE=KLYSTRON_FORWARD_PHASE,KLYSTRON_REVERSE_PHASE,KLYSTRON_FORWARD_POWER,KLYSTRON_REVERSE_POWER,CAVITY_REVERSE_PHASE,CAVITY_FORWARD_PHASE, CAVITY_FORWARD_POWER, CAVITY_REVERSE_POWER, CAVITY_PROBE_POWER, CAVITY_PROBE_PHASE;specify traces to save breakdown data#
EXTRA_BREAKDOWN_DAQ=VAC_LEVEL,DC_LEVEL,BREAKDOWN_RATE,BREAKDOWN_COUNT
OUTSIDE_MASK_COOLDOWN_TIME = 3000; int, ms cooldown time
EXTRA_TRACES_ON_BREAKDOWN = 2; number extra traces to save after an out_side_mask_trace is detected
KLY_PWR_FOR_ACTIVE_PULSE =  500.0; min kyl fwd power to enable incrementing the pulse RF counter


## !!!!!!! FROM THE UNSYNCHONISED ATTEMPT
PHASE_MASK_BY_POWER_POWER_TRACE_1 = CAVITY_REVERSE_POWER;
PHASE_MASK_BY_POWER_PHASE_TRACE_1 = CAVITY_REVERSE_PHASE;
PHASE_MASK_BY_POWER_LEVEL_1 = 5000.0;


## CAVITY REVERSE PHASE MASK PARAMETERS
CRPHA_AUTO_SET=FALSE;Will pick mask indices automatically, if false YOU must Define Them
CRPHA_MASK_SET_TYPE=TIME; (TIME or INDEX) for CRP_AUTO_SET=FALSE manually set s1,s2,s3,s4, via TIME in trace or INDEX in trace
CRPHA_MASK_START=0.75;Only used if CRP_AUTO_SET=FALSE
CRPHA_MASK_END=2.0;Only used if CRP_AUTO_SET=FALSE
CRPHA_MASK_WINDOW_START=1.4;Only used if CRP_AUTO_SET=FALSE
CRPHA_MASK_WINDOW_END =1.7;Only used if CRP_AUTO_SET=FALSE
CRPHA_MASK_TYPE=ABSOLUTE;OR ABSOLUTE
CRPHA_MASK_ABS_MIN=0;Minimum value for a mask, regardless
CRPHA_MASK_LEVEL=50;units depend on CFP_MASK_TYPE
CRPHA_CHECK_STREAK=10;how many continuous points outside mask
CRPHA_MASK_FLOOR=0;Watts, values below this won't get checked
CRPHA_MASK_MIN = 0;Watts, values below this won't get checked
CRPHA_NUM_AVERAGE_TRACES=5;
CRPHA_DROP_AMP=TRUE;
CRPHA_AMP_DROP_VALUE=1;

## CAVITY REVERSE POWER MASK PARAMETERS
CRPOW_AUTO_SET=FALSE;Will pick mask indices automatically, if false YOU must Define Them
CRPOW_MASK_SET_TYPE=INDEX; (TIME or INDEX) for CRP_AUTO_SET=FALSE manually set s1,s2,s3,s4, via TIME in trace or INDEX in trace
CRPOW_MASK_START=57;Only used if CRP_AUTO_SET=FALSE
CRPOW_MASK_END=324;Only used if CRP_AUTO_SET=FALSE
CRPOW_MASK_WINDOW_START=500;Only used if CRP_AUTO_SET=FALSE
CRPOW_MASK_WINDOW_END =501;Only used if CRP_AUTO_SET=FALSE
CRPOW_MASK_TYPE=PERCENT; PERCENT OR ABSOLUTE
CRPOW_MASK_LEVEL=30;units depend on CFP_MASK_TYPE
CRPOW_MASK_ABS_MIN=0;Minimum value for a mask, regardless
CRPOW_CHECK_STREAK=10;how many continuous points outside mask
CRPOW_MASK_FLOOR=100;Watts, values below this won't get checked
CRPOW_MASK_MIN = 100;Watts, values below this won't get checked
CRPOW_NUM_AVERAGE_TRACES=5;
CRPOW_DROP_AMP=TRUE;
CRPOW_AMP_DROP_VALUE=2;


## CAVITY PROBE PHASE MASK PARAMETERS
CPPHA_AUTO_SET=FALSE;Will pick mask indices automatically, if false YOU must Define Them
CPPHA_MASK_SET_TYPE=TIME; (TIME or INDEX) for CRP_AUTO_SET=FALSE manually set s1,s2,s3,s4, via TIME in trace or INDEX in trace
CPPHA_MASK_START=1.1;Only used if CRP_AUTO_SET=FALSE
CPPHA_MASK_END=2.2;Only used if CRP_AUTO_SET=FALSE
CPPHA_MASK_WINDOW_START=500;Only used if CRP_AUTO_SET=FALSE
CPPHA_MASK_WINDOW_END =501;Only used if CRP_AUTO_SET=FALSE
CPPHA_MASK_TYPE=ABSOLUTE; PERCENT OR ABSOLUTE
CPPHA_MASK_ABS_MIN=0; integer,Minimum value for a mask, regardless
CPPHA_MASK_LEVEL=30;integer,units depend on CFP_MASK_TYPE
CPPHA_CHECK_STREAK=10;how many continuous points outside mask
CPPHA_MASK_FLOOR=0;Watts, values below this won't get checked
CPPHA_MASK_MIN = 0;Watts, values below this won't get checked
CPPHA_NUM_AVERAGE_TRACES=5;
CPPHA_DROP_AMP=TRUE;
CPPHA_AMP_DROP_VALUE=3;
 

 ## CAVITY PROBE POWER MASK PARAMETERS
CPPOW_AUTO_SET=FALSE;Will pick mask indices automatically, if false YOU must Define Them
CPPOW_MASK_SET_TYPE=INDEX; (TIME or INDEX) for CRP_AUTO_SET=FALSE manually set s1,s2,s3,s4, via TIME in trace or INDEX in trace
CPPOW_MASK_START=85;Only used if CRP_AUTO_SET=FALSE
CPPOW_MASK_END=324;Only used if CRP_AUTO_SET=FALSE
CPPOW_MASK_WINDOW_START=401;Only used if CRP_AUTO_SET=FALSE
CPPOW_MASK_WINDOW_END =402;Only used if CRP_AUTO_SET=FALSE
CPPOW_MASK_TYPE=PERCENT; PERCENT OR ABSOLUTE
CPPOW_MASK_ABS_MIN=0; integer,Minimum value for a mask, regardless
CPPOW_MASK_LEVEL=40;integer,units depend on CFP_MASK_TYPE
CPPOW_CHECK_STREAK=10;how many continuous points outside mask
CPPOW_MASK_FLOOR=50;Watts, values below this won't get checked
CPPOW_MASK_MIN = 50;Watts, values below this won't get checked
CPPOW_NUM_AVERAGE_TRACES=5;
CPPOW_DROP_AMP=TRUE;
CPPOW_AMP_DROP_VALUE=4;
  
  
## CAVITY FORWARD PHASE MASK PARAMETERS
CFPHA_AUTO_SET=FALSE;Will pick mask indices automatically, if false YOU must Define Them
CFPHA_MASK_SET_TYPE=INDEX; (TIME or INDEX) for CRP_AUTO_SET=FALSE manually set s1,s2,s3,s4, via TIME in trace or INDEX in trace
CFPHA_MASK_START=74;Only used if CRP_AUTO_SET=FALSE
CFPHA_MASK_END=163; Only used if CRP_AUTO_SET=FALSE
CFPHA_MASK_WINDOW_START=401;Only used if CRP_AUTO_SET=FALSE
CFPHA_MASK_WINDOW_END =402;Only used if CRP_AUTO_SET=FALSE
CFPHA_MASK_TYPE=PERCENT;OR ABSOLUTE
CFPHA_MASK_ABS_MIN=0; integer,Minimum value for a mask, regardless
CFPHA_MASK_LEVEL=30;integer,units depend on CFP_MASK_TYPE
CFPHA_CHECK_STREAK=10;how many continuous points outside mask
CFPHA_MASK_FLOOR=0;Watts, values below this won't get checked
CFPHA_MASK_MIN = 0;Watts, values below this won't get checked
CFPHA_NUM_AVERAGE_TRACES=5;
CFPHA_DROP_AMP=TRUE;
CFPHA_AMP_DROP_VALUE=5;
   
## CAVITY FORWARD POWER MASK PARAMETERS
CFPOW_AUTO_SET=FALSE;Will pick mask indices automatically, if false YOU must Define Them
CFPOW_MASK_SET_TYPE=INDEX; (TIME or INDEX) for CRP_AUTO_SET=FALSE manually set s1,s2,s3,s4, via TIME in trace or INDEX in trace
CFPOW_MASK_START=57;Only used if CRP_AUTO_SET=FALSE
CFPOW_MASK_END=179;Only used if CRP_AUTO_SET=FALSE
CFPOW_MASK_WINDOW_START=301;Only used if CRP_AUTO_SET=FALSE
CFPOW_MASK_WINDOW_END =302;Only used if CRP_AUTO_SET=FALSE
CFPOW_MASK_TYPE=PERCENT; PERCENT OR ABSOLUTE
CFPOW_MASK_ABS_MIN=50; integer,Minimum value for a mask, regardless
CFPOW_MASK_LEVEL=40;integer,units depend on CFP_MASK_TYPE
CFPOW_CHECK_STREAK=10;how many continuous points outside mask
CFPOW_MASK_FLOOR=50;Watts, values below this won't get checked
CFPOW_MASK_MIN = 50;Watts, values below this won't get checked
CFPOW_NUM_AVERAGE_TRACES=5;
CFPOW_DROP_AMP=TRUE;
CFPOW_AMP_DROP_VALUE=6;
   
   

## KLYSTRON FORWARD POWER MASK PARAMETERS
;KFPOW_AUTO_SET=FALSE;Will pick mask indices automatically, if false YOU must Define Them
;KFPOW_MASK_SET_TYPE=INDEX; (TIME or INDEX) for CRP_AUTO_SET=FALSE manually set s1,s2,s3,s4, via TIME in trace or INDEX in trace
;KFPOW_MASK_START=63;Only used if CRP_AUTO_SET=FALSE
;KFPOW_MASK_END=86;Only used if CRP_AUTO_SET=FALSE
;KFPOW_MASK_WINDOW_START=300;Only used if CRP_AUTO_SET=FALSE
;KFPOW_MASK_WINDOW_END =301;Only used if CRP_AUTO_SET=FALSE
;KFPOW_MASK_TYPE=PERCENT;OR ABSOLUTE
;KFPOW_MASK_ABS_MIN=500;Minimum value for a mask, regardless
;KFPOW_MASK_LEVEL=10;units depend on CFP_MASK_TYPE
;KF;;POW_CHECK_STREAK=10;how many continuous points outside mask
;KFPOW_MASK_FLOOR=5000;W values below this won't get checked
;KFPOW_MASK_MIN = 5000;W values below this won't get checked
;KFPOW_NUM_AVERAGE_TRACES=5;
;KFPOW_DROP_AMP=TRUE;
;KFPOW_AMP_DROP_VALUE=4; 
##


## output
LOG_FILENAME = "log.txt" ; general messages
LOG_DIRECTORY = "D:\VELA\GIT Projects\Software\Apps\RF_Conditioner\logs\HRRG\"; breakdown data
OUTSIDE_MASK_FORWARD_FILENAME = outside_forward_log;
OUTSIDE_MASK_REVERSE_FILENAME = outside_reverse_log;
OUTSIDE_MASK_PROBE_FILENAME = outside_probe_log;
DATA_LOG_FILENAME = data_log; general data
DATA_LOG_TIME = 1000; ms between logging data
AMP_PWR_LOG_TIME = 2000; ms between logging data
PULSE_COUNT_BREAKDOWN_LOG_FILENAME="pulse_breakdown_log.txt";history of (periodic) pulse count and (all) breakdown events, used to provide continuity for day-to-day running
AMP_POWER_LOG_FILENAME="amp_power_log.txt";history of (periodic) pulse count and (all) breakdown events, used to provide continuity for day-to-day running

## Vacuum parameters
VAC_PV=EBT-HRG1-VAC-IMG-01:PRES;
VAC_SPIKE_DELTA=4e-9;
VAC_DECAY_MODE=LEVEL;Or TIMED if LEVEL then set VAC_SPIKE_DECAY_LEVEL
; if TIMED set VAC_SPIKE_DECAY_TIME
VAC_SPIKE_DECAY_LEVEL=1.2;
VAC_SPIKE_DECAY_TIME=2000;ms
VAC_NUM_SAMPLES_TO_AVERAGE=7;
VAC_CHECK_TIME = 200; ms between vacuum level checks, we think this is the faatest they go at 
VAC_SHOULD_DROP_AMP = TRUE; amp_sp to set if vacuum spike
VAC_SPIKE_AMP_DROP = 5; amp_sp to set if vacuum spike
VAC_MAX_LEVEL = 5e-9;
VAC_MAX_AMP_DROP = 7; amp_sp to set if vacuum spike


## DC parameters
DC_PV = CLA-S01-DIA-WCM-01:Q;
DC_PV = EBT-INJ-DIA-WCM-01:DI-MAX;
DC_SPIKE_DELTA=0.5;
DC_DECAY_MODE=TIMED;Or TIMED if LEVEL then set DARK_CURRENT_SPIKE_DECAY_LEVEL
; if TIMED set VAC_SPIKE_DECAY_TIME
DC_SPIKE_DECAY_LEVEL=1.2;
DC_SPIKE_DECAY_TIME=2000;
DC_NUM_SAMPLES_TO_AVERAGE=5;
DC_CHECK_TIME = 1000; ms between vacuum level checks
DC_SHOULD_DROP_AMP = TRUE;
DC_SPIKE_AMP_DROP = 8; amp_sp to set if vacuum spike

##
## Temperature PVs
##
CAVITY_TEMPERATURE_PV=CLA-GUN-H20-GUN-01:RT; NOTE THESE NAMES :((
CAVITY_TEMPERATURE_CHECK_TIME = 1000;ms between getting new value
WATER_TEMPERATURE_PV=CLA-GUN-H20-GUN-03:RT; NOTE THESE NAMES :((
WATER_TEMPERATURE_CHECK_TIME = 1000;ms between getting new value

## solenoid
SOL_PV = CLA-GUN-MAG-SOL-02:READI
SOL_CHECK_TIME = 1000

##modulator checking
MOD_CHECK_TIME  = 1000;ms

##rf protection checking
RF_PROT_CHECK_TIME  = 1000;ms

## vac_valve
VAC_VALVE_AREA = ALL_VELA_CLARA;value used to define MACHINE_AREA
VAC_VALVE = INJ-VALV1;value must match name of valve in MACHINE_AREA to monitor
VAC_VALVE_CHECK_TIME = 1000;ms between getting new value!!!!


##gui
GUI_UPDATE_TIME  = 1000; mseconds



## general monitoring PVs
## we're hacking this in at the end, so this is sketchyaf
## hav eth eNAME of th ePV with a suffix, then th ePV,
## reader look sfor suffixes, chops suffixes and adds these paramters to to the 
## data dictionary, a value_monitor cna be passed a dict, 
## which it then uses to fill in the data dict
## 

PID_on_off_GMON = CLA-GUN-H2O-PID-02:ON
PID_set_point_GMON = CLA-GUN-H2O-PID-02:SETVAL:RB
PID_output_GMON = CLA-GUN-H2O-PID-02:OUTPUT:RB
PID_proportional_gain_GMON = CLA-GUN-H2O-PID-02:PROP:RB
PID_integral_gain_GMON = CLA-GUN-H2O-PID-02:INTG:RB
PID_derivative gain_GMON = CLA-GUN-H2O-PID-02:DERI:RB
PID_autotune_state_GMON = CLA-GUN-H2O-PID-02:ATUNE



















