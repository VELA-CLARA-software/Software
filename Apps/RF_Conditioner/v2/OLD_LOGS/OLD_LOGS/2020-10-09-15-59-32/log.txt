****************************************************************************************************
******************* __         __    _  _  ___       _   ___  ___   __         __ ******************
******************* \ \  ___  / /   | \| |/ _ \     /_\ | _ \/ __|  \ \  ___  / / ******************
*******************  \ \/ _ \/ /    | .` | (_) |   / _ \|   / (__    \ \/ _ \/ /  ******************
*******************   \_\___/_/     |_|\_|\___/   /_/ \_\_|_\\___|    \_\___/_/   ******************
*******************                                                               ******************
********************************************************************************
*********************** Log Started 2020-10-09-15-59-32 ************************
********************************************************************************
********************************************************************************
******************************** Configuration *********************************
********************************************************************************
config file =
C:\Users\dlerlp\Documents\GitHub\Software\Apps\RF_Conditioner\v2\CLARA_LRRG.yml
dumping parsed config data to text log
CONFIG_FILE:
C:\Users\dlerlp\Documents\GitHub\Software\Apps\RF_Conditioner\v2\CLARA_LRRG.yml,
KFPOW_MASK_TYPE: PERCENT, KRPOW_MASK_FLOOR: 1000.0, BREAKDOWN_TRACES:
['CAVITY_REVERSE_POWER', 'KLYSTRON_FORWARD_POWER', 'CAVITY_FORWARD_POWER'],
CFPHA_MEAN_END: 2.0, MAX_POW: 0.0, MAX_AMP: 120000, VAC_SPIKE_DECAY_LEVEL: 1.2,
CFPOW_MASK_WINDOW_START: 4.5, PID_on_off_GMON: CLA-GUN-H2O-PID-02:ON:RB,
KRPOW_NUM_AVERAGE_TRACES: 2, CFPHA_MASK_SET_TYPE: TIME, CPPOW_MASK_START: 0.8,
KRPOW_MASK_SET_TYPE: TIME, AMP_PWR_ACCEPTANCE_WINDOW: 750000, CPPOW_DROP_AMP:
False, CRPOW_DROP_AMP_VALUE: 2, CFPOW_MASK_FLOOR: 1000.0, CRPHA_MASK_SET_TYPE:
TIME, TEXT_LOG_FILENAME: log.txt, KFPHA_MASK_LO_MIN: 50, KRPOW_CHECK_STREAK: 2,
VAC_VALVE_CHECK_TIME: 1000, CPPOW_MASK_SET_TYPE: TIME, CFPHA_CHECK_STREAK: 2,
CPPOW_AUTO_SET: False, KFPOW_MASK_END: 3.4, CFPHA_MEAN_START: 0.0,
PID_integral_gain: CLA-GUN-H2O-PID-02:INTG:RB, KRPHA_MASK_TYPE: ABSOLUTE,
VAC_ROLLING_SUM_NUM_SAMPLES: 25, CFPOW_MASK_END: 3.5, CFPHA_NUM_AVERAGE_TRACES:
2, KRPOW_AUTO_SET: False, KRPHA_PHASE_MASK_BY_POWER_TRACE: False,
VAC_NUM_SAMPLES_TO_AVERAGE: 7, KFPHA_AUTO_SET: False, CRPOW_MASK_WINDOW_END:
4.25, CFPHA_MASK_LO_MIN: 50, SOL_CHECK_TIME: 1000, MINIMUM_COOLDOWN_TIME: 3000,
RF_STRUCTURE: CLARA_LRRG, WATER_TEMPERATURE_PV: ['CLA-GUN-RF-LRRG-01:RT', 'CLA-
GUN-RF-LRRG-02:RT'], KRPHA_CHECK_STREAK: 2, KRPOW_MASK_END: 5.0,
LLRF_CHECK_TIME: 50, KFPOW_AMPSP_RUNNING_STATS_LOG_FILENAME: amp_power_log.txt,
CPPHA_PHASE_MASK_BY_POWER_LEVEL: 5000.0, PULSE_COUNT_BREAKDOWN_LOG_FILENAME:
pulse_breakdown_log.txt, CFPOW_MASK_START: 1.5, CFPHA_AUTO_SET: False,
KRPOW_DROP_AMP_VALUE: 2, KFPHA_PHASE_MASK_BY_POWER_LEVEL: 5000.0,
CFPHA_MASK_FLOOR: 0.0, KRPHA_PHASE_MASK_BY_POWER_LEVEL: 5000.0,
CFPOW_MASK_LEVEL_LO: 10, KFPOW_MASK_WINDOW_END: 3.8, CPPHA_DROP_AMP_VALUE: 2,
OUTSIDE_MASK_FORWARD_FILENAME: outside_forward_log, KRPHA_MEAN_END: 3.0,
KFPOW_MASK_START: 1.3, KEEP_VALVE_OPEN: False, CRPHA_MASK_LO_MIN: 50,
CRPOW_MASK_FLOOR: 5000.0, SOL_WOBBLE_OSCILLATION_POINTS: 0, CRPHA_MEAN_START:
2.8, DC_PV: EBT-INJ-SCOPE-01:P1, KRPHA_MASK_FLOOR: 0.0, CPPHA_MASK_WINDOW_START:
2.4, CPPOW_MASK_TYPE: ABSOLUTE, CFPOW_MASK_LEVEL: 15, CFPHA_DROP_AMP_VALUE: 2,
CRPHA_MASK_TYPE: ABSOLUTE, TRACES_TO_SAVE: ['KLYSTRON_FORWARD_PHASE',
'KLYSTRON_REVERSE_PHASE', 'KLYSTRON_FORWARD_POWER', 'KLYSTRON_REVERSE_POWER',
'CAVITY_REVERSE_PHASE', 'CAVITY_FORWARD_PHASE', 'CAVITY_FORWARD_POWER',
'CAVITY_REVERSE_POWER'], KRPHA_MASK_WINDOW_END: 3.4, MAGNET_MACHINE_AREA:
CLARA_PH1, DC_SPIKE_DELTA: 0.015, PID_proportional_gain: CLA-GUN-H2O-
PID-02:PROP:RB, OUTSIDE_MASK_COOLDOWN_TIME: 4000, VAC_VALVE_AREA: CLARA_PH1,
SOL_WOBBLE_LO: 0.0, KRPOW_MASK_LEVEL: 35.0, KRPHA_DROP_AMP: False,
CRPHA_MASK_END: 5.0, CRPHA_MEAN_END: 3.0, KFPOW_MEAN_START: 2.0, CRPHA_DROP_AMP:
False, KFPOW_MEAN_END: 2.5, CFPOW_NUM_AVERAGE_TRACES: 2, CPPHA_MASK_END: 5.0,
VAC_VALVE: S01-VALV-01, PID_set_point: CLA-GUN-H2O-PID-02:SETVAL:RB,
CAVITY_TEMPERATURE_CHECK_TIME: 1000, CFPHA_DROP_AMP: False,
MODULATOR_CHECK_TIME: 1000, SOL_COUNT: 2, RF_REPETITION_RATE: 10,
CPPHA_MASK_WINDOW_END: 3.4, LOG_RAMP_CURVE_NUMSTEPS: 150, KFPHA_MEAN_START: 2.3,
RF_PROT_CHECK_TIME: 1000, KFPHA_MASK_TYPE: ABSOLUTE, MIN_AMP: 500,
DC_CHECK_TIME: 1000, PID_on_off: CLA-GUN-H2O-PID-02:ON:RB,
KRPHA_NUM_AVERAGE_TRACES: 2, KFPHA_MASK_FLOOR: 0.0, CRPHA_DROP_AMP_VALUE: 2,
KRPHA_MASK_WINDOW_START: 2.4, CRPOW_MASK_TYPE: PERCENT, BIN_WIDTH: 400,
KFPOW_MASK_FLOOR: 0.0, CPPOW_MASK_END: 5.0, BINARY_DATA_LOG_FILENAME: data_log,
KRPHA_MASK_LO_MIN: 50, KFPOW_MASK_LEVEL: 35.0, OUTSIDE_MASK_CHECK_TIME: 100,
MODE: OPERATIONAL, CRPOW_MASK_LO_MIN: 50, KLY_PWR_FOR_ACTIVE_PULSE: 500.0,
CFPOW_MASK_LEVEL_HI: 40, CRPHA_MASK_FLOOR: 0.0, GMON_SUFFIX: _GMON,
KFPOW_DROP_AMP_VALUE: 2, KRPOW_MEAN_END: 2.5, WHEN_VAC_HI_DISABLE_RAMP: True,
AMP_PWR_LOG_TIME: 50, VAC_SPIKE_DROP_AMP: 5, DC_SPIKE_DECAY_TIME: 2000,
CPPHA_MASK_TYPE: ABSOLUTE, KFPHA_MASK_SET_TYPE: TIME, KRPOW_MASK_WINDOW_START:
2.4, PID_derivative_gain_GMON: CLA-GUN-H2O-PID-02:DERI:RB,
SOL_WOBBLE_OSCILLATION_TIME: 100.0, PID_integral_gain_GMON: CLA-GUN-H2O-
PID-02:INTG:RB, CFPOW_MASK_SET_TYPE: TIME, CFPOW_MASK_WINDOW_END: 4.6,
LOG_DIRECTORY:
C:\Users\dlerlp\Documents\GitHub\Software\Apps\RF_Conditioner\v2\logs\,
KFPHA_MASK_LEVEL: 35.0, CAVITY_TEMPERATURE_PV: ['CLA-GUN-RF-LRRG-01:RT'],
VAC_SPIKE_DELTA: 1e-08, VAC_CHECK_TIME: 200, PID_set_point_GMON: CLA-GUN-H2O-
PID-02:SETVAL:RB, DC_DECAY_MODE: TIMED, SOL_WOBBLE_HI: 0.0,
CRPOW_MASK_WINDOW_START: 3.7, CPPHA_NUM_AVERAGE_TRACES: 2,
CRPHA_NUM_AVERAGE_TRACES: 2, NUM_BUFFER_TRACES: 500, CRPHA_MASK_LEVEL: 35.0,
CRPOW_CHECK_STREAK: 2, CPPHA_AUTO_SET: False, VAC_SHOULD_DROP_AMP: True,
KFPHA_CHECK_STREAK: 2, KRPOW_MEAN_START: 2.0, KFPOW_AUTO_SET: False,
PID_llrf_max_amp_sp_limit: CLA-GUN-LRF-CTRL-01:vm:dsp:sp_amp:amplitude:DRVH,
OUTSIDE_MASK_PROBE_FILENAME: outside_probe_log, CPPOW_MASK_FLOOR: 1000.0,
KRPOW_MASK_START: 0.8, DC_SHOULD_DROP_AMP: False, CRPOW_MEAN_START: 3.2,
CFPOW_DROP_AMP_VALUE: 6, CRPOW_MEAN_END: 3.6, GUI_UPDATE_TIME: 1000,
CPPOW_MEAN_END: 2.0, CFPOW_MEAN_START: 3.2, KFPHA_DROP_AMP_VALUE: 2,
KRPHA_DROP_AMP_VALUE: 2, CPPHA_MEAN_END: 2.0, KRPHA_MASK_LEVEL: 35.0,
PULSE_LENGTH: 2500, DEFAULT_RF_INCREASE_LEVEL: 50, KFPHA_MEAN_END: 2.75,
PID_derivative_gain: CLA-GUN-H2O-PID-02:DERI:RB, SHOULD_SOL_WOBBLE: False,
CPPOW_MEAN_START: 0.0, VAC_DECAY_MODE: LEVEL, SOL_NAMES: ['L01-SOL1',
'L01-SOL2'], PULSE_LENGTH_ERROR: 50, KFPOW_MASK_SET_TYPE: TIME,
PID_autotune_state: CLA-GUN-H2O-PID-02:ATUNE:RB, CFPOW_MASK_LO_MIN: 50,
KRPHA_MASK_END: 5.0, CPPOW_MASK_WINDOW_START: 2.4, VAC_MAX_LEVEL_FOR_RAMP:
5e-09, CFPOW_CHECK_STREAK: 2, CFPHA_MASK_LEVEL: 35.0, CRPHA_MASK_WINDOW_END:
3.4, CPPHA_CHECK_STREAK: 2, KRPHA_MEAN_START: 2.5, CPPOW_NUM_AVERAGE_TRACES: 2,
CPPHA_MASK_LEVEL: 35.0, CPPHA_DROP_AMP: False, CAV_PWR_RATIO: 2.0,
CRPHA_PHASE_MASK_BY_POWER_TRACE: False, PID_proportional_gain_GMON: CLA-GUN-H2O-
PID-02:PROP:RB, CFPHA_MASK_END: 5.0, LOG_RAMP_CURVE_RAMP_RATE: 0.2,
CRPHA_CHECK_STREAK: 2, CRPHA_MASK_START: 0.8, KFPHA_MASK_END: 5.0,
KFPHA_NUM_AVERAGE_TRACES: 2, PID_output: CLA-GUN-H2O-PID-02:OUTPUT:RB,
WATER_TEMPERATURE_PV_COUNT: 2, BREAKDOWN_RATE_AIM: 10, KRPOW_DROP_AMP: False,
LOG_RAMP_CURVE_PULSES_PER_STEP: 15, CPPHA_MASK_FLOOR: 0.0, CPPHA_MASK_SET_TYPE:
TIME, KFPHA_MASK_START: 0.8, KFPHA_PHASE_MASK_BY_POWER_TRACE: False,
WATER_TEMPERATURE_CHECK_TIME: 1000, CPPHA_PHASE_MASK_BY_POWER_TRACE: False,
CFPOW_MASK_TYPE: PERCENT, CFPHA_MASK_WINDOW_START: 2.4, KRPOW_MASK_LO_MIN: 50,
CRPOW_MASK_START: 1.2, CRPOW_MASK_SET_TYPE: TIME, CPPOW_CHECK_STREAK: 2,
CPPHA_MASK_START: 0.8, CFPOW_DROP_AMP: False, CPPHA_MASK_LO_MIN: 50,
KRPHA_AUTO_SET: False, MEAN_TRACES: ['KLYSTRON_FORWARD_POWER',
'KLYSTRON_REVERSE_POWER', 'CAVITY_FORWARD_POWER', 'CAVITY_REVERSE_POWER',
'KLYSTRON_FORWARD_PHASE', 'KLYSTRON_REVERSE_PHASE', 'CAVITY_FORWARD_PHASE',
'CAVITY_REVERSE_PHASE'], DC_SPIKE_DECAY_LEVEL: 1.2, CRPHA_MASK_WINDOW_START:
2.4, CPPOW_MASK_LO_MIN: 50, CRPOW_DROP_AMP: True, KFPOW_CHECK_STREAK: 2,
DEFAULT_PULSE_COUNT: 1000, CRPOW_NUM_AVERAGE_TRACES: 2,
VAC_SPIKE_TRACES_TO_SAVE: ['KLYSTRON_FORWARD_PHASE', 'KLYSTRON_REVERSE_PHASE',
'KLYSTRON_FORWARD_POWER', 'KLYSTRON_REVERSE_POWER', 'CAVITY_REVERSE_PHASE',
'CAVITY_FORWARD_PHASE', 'CAVITY_FORWARD_POWER', 'CAVITY_REVERSE_POWER'],
PID_output_GMON: CLA-GUN-H2O-PID-02:OUTPUT:RB, CRPOW_MASK_LEVEL: 35.0,
KFPOW_NUM_AVERAGE_TRACES: 2, BINARY_DATA_LOG_TIME: 1000, KRPHA_MASK_SET_TYPE:
TIME, KFPOW_MASK_WINDOW_START: 3.6, KFPOW_DROP_AMP: True, KRPOW_MASK_WINDOW_END:
3.4, PID_autotune_state_GMON: CLA-GUN-H2O-PID-02:ATUNE:RB,
NUM_SET_POINTS_TO_FIT: 4, CFPHA_MASK_START: 0.8, CRPOW_AUTO_SET: False,
CPPOW_MASK_LEVEL: 35.0, CPPHA_MEAN_START: 0.0, MAX_DELTA_AMP_SP: 300,
CRPHA_AUTO_SET: False, VAC_PV: CLA-LRG1-VAC-IMG-01:P, KFPOW_MASK_LO_MIN: 50,
CPPOW_DROP_AMP_VALUE: 2, CAVITY_TEMPERATURE_PV_COUNT: 1, CFPHA_MASK_TYPE:
ABSOLUTE, VAC_SPIKE_MAX_LEVEL_FOR_OFF: 2e-09, CRPHA_PHASE_MASK_BY_POWER_LEVEL:
5000.0, EXTRA_BREAKDOWN_DAQ: ['VAC_LEVEL', 'DC_LEVEL', 'BREAKDOWN_RATE',
'BREAKDOWN_COUNT'], KFPHA_MASK_WINDOW_START: 2.4, KRPHA_MASK_START: 0.8,
OUTSIDE_MASK_REVERSE_FILENAME: outside_reverse_log, CFPOW_MEAN_END: 3.6,
NUMBER_OF_PULSES_IN_BREAKDOWN_HISTORY: 100000, CFPHA_PHASE_MASK_BY_POWER_TRACE:
False, CRPOW_MASK_END: 6.0, RF_REPETITION_RATE_ERROR: 3, CFPHA_MASK_WINDOW_END:
3.4, VAC_SPIKE_DECAY_TIME: 2000, EXTRA_TRACES_ON_BREAKDOWN: 2,
DC_SPIKE_DROP_AMP: 6, CFPOW_AUTO_SET: False, KFPHA_MASK_WINDOW_END: 3.4,
KRPOW_MASK_TYPE: ABSOLUTE, DC_NUM_SAMPLES_TO_AVERAGE: 5, KFPHA_DROP_AMP: False,
LOG_RAMP_START_POWER: 30000, CPPOW_MASK_WINDOW_END: 3.4,
CFPHA_PHASE_MASK_BY_POWER_LEVEL: 5000.0,

2020-10-09 15:59:33.713000
********************************************************************************
***** src.controllers.main_controller, create rf_conditioning_data object ******
********************************************************************************

2020-10-09 15:59:33.713000
Started in debug mode = False
********************************************************************************
****************** Print Rationalized kfpow_running_stat_log  ******************
********************************************************************************
get_kfpow_running_stat_log complete

2020-10-09 15:59:36.143000
********************************************************************************
***** src.controllers.main_controller, create hardware_control_hub object ******
********************************************************************************
hardware_control_hub Starting CATAP Hardware Interfaces
start_llrf_control()  SET AMP_SP = 0, successfully created a CLARA_LRRG LLRF
control object

2020-10-09 15:59:52.754000
********************************************************************************
********** src.controllers.main_controller, create monitor_hub object **********
********************************************************************************
src.monitors.monitor_hub Starting Data Monitoring
src.monitors.monitor_hub start_llrf_monitor()

2020-10-09 15:59:53.842000
src.controllers.hardware_control_hub connected, PV = CLA-LRG1-VAC-IMG-01:P with
ID = d0,  acquiring data
src.monitors.vac_monitor will drop amp on spike detection
src.monitors.vac_monitor STARTED running
src.monitors.vac_monitor vac_spike_status = state.UNKNOWN
src.monitors.vac_monitor vac_spike_status = state.GOOD
start_vac_monitor successfully started Vacuum Monitoring
src.monitors.monitor_hub start_daq_frequency_monitor()
********************************************************************************
************************* Connecting to Water Temp PVs *************************
********************************************************************************

2020-10-09 15:59:54.915000
src.controllers.hardware_control_hub connected, PV = CLA-GUN-RF-LRRG-01:RT with
ID = d1,  acquiring data

2020-10-09 15:59:54.915000
src.monitors.vac_monitor level ok, 7.2e-10 < 5e-09

2020-10-09 15:59:54.915000
Connected to CLA-GUN-RF-LRRG-01:RT id = WATER_TEMP_ID_0
********************************************************************************
************************* Connecting to Water Temp PVs *************************
********************************************************************************

2020-10-09 15:59:55.979000
src.controllers.hardware_control_hub connected, PV = CLA-GUN-RF-LRRG-02:RT with
ID = d2,  acquiring data

2020-10-09 15:59:55.979000
Connected to CLA-GUN-RF-LRRG-02:RT id = WATER_TEMP_ID_1

2020-10-09 15:59:55.979000
start_water_temperature_monitor successfully started Water Temperature
Monitoring

2020-10-09 15:59:55.979000
src.monitors.monitor_hub start_cavity_temperature_monitor()
********************************************************************************
************************ Connecting to Cavity Temp PVs *************************
********************************************************************************

2020-10-09 15:59:57.073000
src.controllers.hardware_control_hub connected, PV = CLA-GUN-RF-LRRG-01:RT with
ID = d3,  acquiring data

2020-10-09 15:59:57.104000
Connected to CLA-GUN-RF-LRRG-01:RT id = CAVITY_TEMP_ID_0

2020-10-09 15:59:57.111000
start_cavity_temperature_monitor successfully started Cavity Temperature
Monitoring

2020-10-09 15:59:57.111000
src.monitors.monitor_hub start_solenoid_monitoring()
src.monitors.monitor_hub Sanity Check
is_vac_monitoring = True
is_llrf_monitoring = True
is_cavity_temp_monitoring = True
is_modulator_monitoring = True
is_rf_heartbeat_monitoring = True
is_sol_monitoring = True
is_rf_prot_monitoring = True
is_outside_mask_monitoring = True
is_daq_frequency_monitoring = True
is_water_temp_monitoring = True
is_vac_valve_monitor = True

2020-10-09 15:59:57.126000
********************************************************************************
********** src.data.rf_conditioning_logger start_binary_data_logging  **********
********************************************************************************
binary log file added
llrf_max_amp    p0_all  llrf_output_status      next_sp_decrease
probe_pha       rev_cav_pha     can_llrf_output_state_OLD
breakdown_rate_aim      phi_sp  latest_amp_sp_from_ramp num_outside_mask_traces
next_requested_power_change     modulator_good  p2_current_sp_to_fit
CAVITY_TEMP_ID_0        p2_current_sp   SP_QUAD_ALL     water_temp_gui
event_pulse_count_zero  max_sp_increase ramp_mode       rev_kly_pha
event_pulse_count       is_amp_ff_connected     delta_kfpow
cav_pwr_ratio_can_ramp  p1_current_sp_to_fit    vac_level
gui_can_rf_output       can_rf_output_status_OLD
bd_rate_calc_first_pulse_number cav_pwr_ratio
number_of_pulses_in_breakdown_history   probe_outside_mask_count
current_ramp_index      y_min   rev_kly_pwr     fwd_kly_pha
active_breakdown_count  last_sp_above_100       time_stamp, (start = 2020-10-09
15:59:57.158000)        TOR_SCAN        rev_cav_pwr
SP_QUAD_CURRENT_SP_TO_FIT       last_vac_spike_status   llrf_DAQ_rep_rate_status
x_max   p0_current_sp_to_fit    amp_ff  c       L01-SOL1        L01-SOL2
y_max   p1_current_sp   x_min   can_ramp_status kfpower_at_last_amp_sp
vac_level_can_ramp      last_breakdown_status   reverse_outside_mask_count
TOR_ACQM        p0_current_sp   breakdown_rate_low      WATER_TEMP_ID_1 cav_temp
fwd_cav_pha     BD_state_OLD    rfprot_good     last_amp_sp     vac_spike_status
DC_level        amp_sp  global_mask_checking    llrf_heart_beat_value
gui_can_ramp    can_llrf_output_state   p1_all  log_pulse_count
llrf_DAQ_rep_rate_aim   catap_max_amp   can_ramp_status_OLD     p2_all
fwd_kly_pwr     sol_value       log_amp_set     duplicate_pulse_count   m
pulse_count     fwd_cav_pwr     SP_SLF  WATER_TEMP_ID_0 probe_pwr
can_rf_output_status    elapsed_time    DC_spike_status pulses_to_next_ramp
GUI_mod_and_prot_good   breakdown_status        catap_max_amp_can_ramp_status
main_can_ramp   llrf_DAQ_rep_rate       vac_valve_status        SP_QUAD_CURRENT
modulator_state rev_power_spike_count   BD_state        last_ramp_method
required_pulses rfprot_state    total_breakdown_count

16      <type 'float'>  16      <type 'float'>  32      <enum 'state'>  16
<type 'float'>  16      <type 'float'>  16      <type 'float'>  32      <enum
'state'>  12      <type 'int'>    12      <type 'int'>    16      <type 'float'>
12      <type 'int'>    12      <type 'int'>    12      <type 'bool'>   16
<type 'float'>  16      <type 'float'>  16      <type 'float'>  16      <type
'float'>  16      <type 'float'>  12      <type 'int'>    16      <type 'float'>
32      <enum 'ramp_method'>    16      <type 'float'>  12      <type 'int'>
12      <type 'bool'>   16      <type 'float'>  12      <type 'bool'>   16
<type 'float'>  16      <type 'float'>  12      <type 'bool'>   32      <enum
'state'>  12      <type 'int'>    16      <type 'float'>  12      <type 'int'>
12      <type 'int'>    12      <type 'int'>    16      <type 'float'>  16
<type 'float'>  16      <type 'float'>  12      <type 'int'>    16      <type
'float'>  <type 'float'>  12      <type 'int'>    16      <type 'float'>  16
<type 'float'>  32      <enum 'state'>  32      <enum 'state'>  16      <type
'float'>  16      <type 'float'>  12      <type 'int'>    16      <type 'float'>
16      <type 'float'>  16      <type 'float'>  16      <type 'float'>  16
<type 'float'>  16      <type 'float'>  32      <enum 'state'>  16      <type
'float'>  12      <type 'bool'>   32      <enum 'state'>  12      <type 'int'>
12      <type 'int'>    16      <type 'float'>  12      <type 'bool'>   16
<type 'float'>  16      <type 'float'>  16      <type 'float'>  32      <enum
'state'>  12      <type 'bool'>   16      <type 'float'>  32      <enum 'state'>
16      <type 'float'>  16      <type 'float'>  12      <type 'bool'>   16
<type 'float'>  12      <type 'bool'>   32      <enum 'state'>  16      <type
'float'>  12      <type 'int'>    12      <type 'int'>    16      <type 'float'>
32      <enum 'state'>  16      <type 'float'>  16      <type 'float'>  16
<type 'float'>  12      <type 'int'>    12      <type 'int'>    16      <type
'float'>  12      <type 'int'>    16      <type 'float'>  16      <type 'float'>
16      <type 'float'>  16      <type 'float'>  32      <enum 'state'>  18
<type 'long'>   32      <enum 'state'>  12      <type 'int'>    12      <type
'bool'>   32      <enum 'state'>  12      <type 'bool'>   12      <type 'bool'>
16      <type 'float'>  32      <class
'VELA_CLARA_Vac_Valve_Control.VALVE_STATE'>      16      <type 'float'>  32
<class 'VELA_CLARA_RF_Modulator_Control.GUN_MOD_STATE'> 12      <type 'int'>
32      <enum 'state'>  32      <enum 'ramp_method'>    12      <type 'int'>
32      <class 'VELA_CLARA_RF_Protection_Control.RF_PROT_STATUS'>       12
<type 'int'>
src.data.rf_conditioning_data reset_event_pulse_count, new
event_pulse_count_zero = 5381157

2020-10-09 15:59:57.258000
********************************************************************************
src.controllers.main_controller The RF Conditioning is Preparing to Entering
Main_Loop !
********************************************************************************

2020-10-09 16:12:04.279000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:04.386000
enable_llrf, isPhaseFFLocked = False, attempting lockPhaseFF()

2020-10-09 16:12:04.490000
enable_llrf, isRFOutput = True

2020-10-09 16:12:04.490000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:04.693000
enable_llrf, isRFOutput = True

2020-10-09 16:12:04.693000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:04.897000
enable_llrf, isRFOutput = True

2020-10-09 16:12:04.897000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:05.099000
enable_llrf, isRFOutput = True

2020-10-09 16:12:05.099000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:05.303000
enable_llrf, isRFOutput = True

2020-10-09 16:12:05.303000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:05.515000
enable_llrf, isRFOutput = True

2020-10-09 16:12:05.517000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:05.719000
enable_llrf, isRFOutput = True

2020-10-09 16:12:05.721000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:05.923000
enable_llrf, isRFOutput = True

2020-10-09 16:12:05.925000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:06.127000
enable_llrf, isRFOutput = True

2020-10-09 16:12:06.129000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:06.340000
enable_llrf, isRFOutput = True

2020-10-09 16:12:06.342000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:06.556000
enable_llrf, isRFOutput = True

2020-10-09 16:12:06.566000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:06.770000
enable_llrf, isRFOutput = True

2020-10-09 16:12:06.770000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:06.973000
enable_llrf, isRFOutput = True

2020-10-09 16:12:06.973000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:07.177000
enable_llrf, isRFOutput = True

2020-10-09 16:12:07.177000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:07.391000
enable_llrf, isRFOutput = True

2020-10-09 16:12:07.391000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:07.594000
enable_llrf, isRFOutput = True

2020-10-09 16:12:07.594000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:07.798000
enable_llrf, isRFOutput = True

2020-10-09 16:12:07.798000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:08.002000
enable_llrf, isRFOutput = True

2020-10-09 16:12:08.002000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:08.216000
enable_llrf, isRFOutput = True

2020-10-09 16:12:08.216000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:08.419000
enable_llrf, isRFOutput = True

2020-10-09 16:12:08.419000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:08.621000
enable_llrf, isRFOutput = True

2020-10-09 16:12:08.623000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:08.825000
enable_llrf, isRFOutput = True

2020-10-09 16:12:08.827000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:09.030000
enable_llrf, isRFOutput = True

2020-10-09 16:12:09.030000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:09.233000
enable_llrf, isRFOutput = True

2020-10-09 16:12:09.243000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:09.447000
enable_llrf, isRFOutput = True

2020-10-09 16:12:09.447000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:09.651000
enable_llrf, isRFOutput = True

2020-10-09 16:12:09.651000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:09.855000
enable_llrf, isRFOutput = True

2020-10-09 16:12:09.855000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:10.058000
enable_llrf, isRFOutput = True

2020-10-09 16:12:10.058000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:10.270000
enable_llrf, isRFOutput = True

2020-10-09 16:12:10.270000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:10.476000
enable_llrf, isRFOutput = True

2020-10-09 16:12:10.476000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:10.680000
enable_llrf, isRFOutput = True

2020-10-09 16:12:10.680000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:10.883000
enable_llrf, isRFOutput = True

2020-10-09 16:12:10.883000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:11.085000
enable_llrf, isRFOutput = True

2020-10-09 16:12:11.087000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:11.290000
enable_llrf, isRFOutput = True

2020-10-09 16:12:11.298000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:11.503000
enable_llrf, isRFOutput = True

2020-10-09 16:12:11.503000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:11.707000
enable_llrf, isRFOutput = True

2020-10-09 16:12:11.707000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:11.910000
enable_llrf, isRFOutput = True

2020-10-09 16:12:11.910000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:12.112000
enable_llrf, isRFOutput = True

2020-10-09 16:12:12.112000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:12.323000
enable_llrf, isRFOutput = True

2020-10-09 16:12:12.325000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:12.529000
enable_llrf, isRFOutput = True

2020-10-09 16:12:12.529000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:12.732000
enable_llrf, isRFOutput = True

2020-10-09 16:12:12.732000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:12.936000
enable_llrf, isRFOutput = True

2020-10-09 16:12:12.936000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:13.140000
enable_llrf, isRFOutput = True

2020-10-09 16:12:13.140000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:13.343000
enable_llrf, isRFOutput = True

2020-10-09 16:12:13.351000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:13.557000
enable_llrf, isRFOutput = True

2020-10-09 16:12:13.557000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:13.761000
enable_llrf, isRFOutput = True

2020-10-09 16:12:13.761000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:13.964000
enable_llrf, isRFOutput = True

2020-10-09 16:12:13.964000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:14.168000
enable_llrf, isRFOutput = True

2020-10-09 16:12:14.168000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:14.380000
enable_llrf, isRFOutput = True

2020-10-09 16:12:14.380000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:14.584000
enable_llrf, isRFOutput = True

2020-10-09 16:12:14.584000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:14.789000
enable_llrf, isRFOutput = True

2020-10-09 16:12:14.789000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:14.993000
enable_llrf, isRFOutput = True

2020-10-09 16:12:14.993000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:15.197000
enable_llrf, isRFOutput = True

2020-10-09 16:12:15.197000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:15.410000
enable_llrf, isRFOutput = True

2020-10-09 16:12:15.410000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:15.612000
enable_llrf, isRFOutput = True

2020-10-09 16:12:15.612000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:15.815000
enable_llrf, isRFOutput = True

2020-10-09 16:12:15.815000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:16.018000
enable_llrf, isRFOutput = True

2020-10-09 16:12:16.018000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:16.222000
enable_llrf, isRFOutput = True

2020-10-09 16:12:16.222000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:16.457000
enable_llrf, isRFOutput = True

2020-10-09 16:12:16.457000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:16.660000
enable_llrf, isRFOutput = True

2020-10-09 16:12:16.660000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:16.863000
enable_llrf, isRFOutput = True

2020-10-09 16:12:16.863000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:17.065000
enable_llrf, isRFOutput = True

2020-10-09 16:12:17.065000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:17.276000
enable_llrf, isRFOutput = True

2020-10-09 16:12:17.276000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:17.482000
enable_llrf, isRFOutput = True

2020-10-09 16:12:17.482000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:17.684000
enable_llrf, isRFOutput = True

2020-10-09 16:12:17.684000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:17.887000
enable_llrf, isRFOutput = True

2020-10-09 16:12:17.887000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:18.090000
enable_llrf, isRFOutput = True

2020-10-09 16:12:18.090000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:18.301000
enable_llrf, isRFOutput = True

2020-10-09 16:12:18.301000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:18.507000
enable_llrf, isRFOutput = True

2020-10-09 16:12:18.507000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:18.710000
enable_llrf, isRFOutput = True

2020-10-09 16:12:18.710000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:18.912000
enable_llrf, isRFOutput = True

2020-10-09 16:12:18.912000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:19.114000
enable_llrf, isRFOutput = True

2020-10-09 16:12:19.114000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:19.328000
enable_llrf, isRFOutput = True

2020-10-09 16:12:19.328000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:19.532000
enable_llrf, isRFOutput = True

2020-10-09 16:12:19.532000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:19.735000
enable_llrf, isRFOutput = True

2020-10-09 16:12:19.735000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:19.939000
enable_llrf, isRFOutput = True

2020-10-09 16:12:19.939000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:20.141000
enable_llrf, isRFOutput = True

2020-10-09 16:12:20.143000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:20.346000
enable_llrf, isRFOutput = True

2020-10-09 16:12:20.354000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:20.557000
enable_llrf, isRFOutput = True

2020-10-09 16:12:20.559000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:20.761000
enable_llrf, isRFOutput = True

2020-10-09 16:12:20.761000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:20.963000
enable_llrf, isRFOutput = True

2020-10-09 16:12:20.963000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:21.165000
enable_llrf, isRFOutput = True

2020-10-09 16:12:21.165000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:21.379000
enable_llrf, isRFOutput = True

2020-10-09 16:12:21.379000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:21.582000
enable_llrf, isRFOutput = True

2020-10-09 16:12:21.582000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:21.786000
enable_llrf, isRFOutput = True

2020-10-09 16:12:21.786000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:21.990000
enable_llrf, isRFOutput = True

2020-10-09 16:12:21.990000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:22.194000
enable_llrf, isRFOutput = True

2020-10-09 16:12:22.194000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:22.407000
enable_llrf, isRFOutput = True

2020-10-09 16:12:22.407000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:22.608000
enable_llrf, isRFOutput = True

2020-10-09 16:12:22.610000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:22.814000
enable_llrf, isRFOutput = True

2020-10-09 16:12:22.814000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:23.016000
enable_llrf, isRFOutput = True

2020-10-09 16:12:23.016000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:23.219000
enable_llrf, isRFOutput = True

2020-10-09 16:12:23.219000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:23.429000
enable_llrf, isRFOutput = True

2020-10-09 16:12:23.432000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:23.635000
enable_llrf, isRFOutput = True

2020-10-09 16:12:23.635000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:23.839000
enable_llrf, isRFOutput = True

2020-10-09 16:12:23.839000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:24.043000
enable_llrf, isRFOutput = True

2020-10-09 16:12:24.043000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:24.246000
enable_llrf, isRFOutput = True

2020-10-09 16:12:24.246000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:24.458000
enable_llrf, isRFOutput = True

2020-10-09 16:12:24.460000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:24.664000
enable_llrf, isRFOutput = True

2020-10-09 16:12:24.664000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:24.868000
enable_llrf, isRFOutput = True

2020-10-09 16:12:24.868000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:25.072000
enable_llrf, isRFOutput = True

2020-10-09 16:12:25.072000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:25.276000
enable_llrf, isRFOutput = True

2020-10-09 16:12:25.276000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:25.489000
enable_llrf, isRFOutput = True

2020-10-09 16:12:25.489000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:25.693000
enable_llrf, isRFOutput = True

2020-10-09 16:12:25.693000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:25.897000
enable_llrf, isRFOutput = True

2020-10-09 16:12:25.897000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:26.100000
enable_llrf, isRFOutput = True

2020-10-09 16:12:26.100000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:26.303000
enable_llrf, isRFOutput = True

2020-10-09 16:12:26.303000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:26.536000
enable_llrf, isRFOutput = True

2020-10-09 16:12:26.536000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:26.739000
enable_llrf, isRFOutput = True

2020-10-09 16:12:26.741000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:26.943000
enable_llrf, isRFOutput = True

2020-10-09 16:12:26.945000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:27.149000
enable_llrf, isRFOutput = True

2020-10-09 16:12:27.149000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:27.353000
enable_llrf, isRFOutput = True

2020-10-09 16:12:27.353000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:27.565000
enable_llrf, isRFOutput = True

2020-10-09 16:12:27.565000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:27.771000
enable_llrf, isRFOutput = True

2020-10-09 16:12:27.771000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:27.972000
enable_llrf, isRFOutput = True

2020-10-09 16:12:27.974000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:28.177000
enable_llrf, isRFOutput = True

2020-10-09 16:12:28.177000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:28.389000
enable_llrf, isRFOutput = True

2020-10-09 16:12:28.389000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:28.595000
enable_llrf, isRFOutput = True

2020-10-09 16:12:28.595000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:28.798000
enable_llrf, isRFOutput = True

2020-10-09 16:12:28.798000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:29.002000
enable_llrf, isRFOutput = True

2020-10-09 16:12:29.002000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:29.206000
enable_llrf, isRFOutput = True

2020-10-09 16:12:29.206000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:29.418000
enable_llrf, isRFOutput = True

2020-10-09 16:12:29.418000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:29.622000
enable_llrf, isRFOutput = True

2020-10-09 16:12:29.622000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:29.825000
enable_llrf, isRFOutput = True

2020-10-09 16:12:29.825000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:30.028000
enable_llrf, isRFOutput = True

2020-10-09 16:12:30.028000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:30.230000
enable_llrf, isRFOutput = True

2020-10-09 16:12:30.230000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:30.442000
enable_llrf, isRFOutput = True

2020-10-09 16:12:30.444000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:30.648000
enable_llrf, isRFOutput = True

2020-10-09 16:12:30.648000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:30.852000
enable_llrf, isRFOutput = True

2020-10-09 16:12:30.852000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:31.055000
enable_llrf, isRFOutput = True

2020-10-09 16:12:31.055000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:31.259000
enable_llrf, isRFOutput = True

2020-10-09 16:12:31.259000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:31.473000
enable_llrf, isRFOutput = True

2020-10-09 16:12:31.473000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:31.676000
enable_llrf, isRFOutput = True

2020-10-09 16:12:31.676000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:31.880000
enable_llrf, isRFOutput = True

2020-10-09 16:12:31.880000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:32.084000
enable_llrf, isRFOutput = True

2020-10-09 16:12:32.084000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:32.287000
enable_llrf, isRFOutput = True

2020-10-09 16:12:32.287000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:32.491000
enable_llrf, isRFOutput = True

2020-10-09 16:12:32.491000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:32.703000
enable_llrf, isRFOutput = True

2020-10-09 16:12:32.703000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:32.906000
enable_llrf, isRFOutput = True

2020-10-09 16:12:32.908000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:33.112000
enable_llrf, isRFOutput = True

2020-10-09 16:12:33.112000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:33.316000
enable_llrf, isRFOutput = True

2020-10-09 16:12:33.316000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:33.528000
enable_llrf, isRFOutput = True

2020-10-09 16:12:33.530000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:33.732000
enable_llrf, isRFOutput = True

2020-10-09 16:12:33.734000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:33.938000
enable_llrf, isRFOutput = True

2020-10-09 16:12:33.938000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:34.141000
enable_llrf, isRFOutput = True

2020-10-09 16:12:34.141000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:34.345000
enable_llrf, isRFOutput = True

2020-10-09 16:12:34.345000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:34.557000
enable_llrf, isRFOutput = True

2020-10-09 16:12:34.559000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:34.763000
enable_llrf, isRFOutput = True

2020-10-09 16:12:34.763000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:34.967000
enable_llrf, isRFOutput = True

2020-10-09 16:12:34.967000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:35.170000
enable_llrf, isRFOutput = True

2020-10-09 16:12:35.170000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:35.374000
enable_llrf, isRFOutput = True

2020-10-09 16:12:35.374000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:35.588000
enable_llrf, isRFOutput = True

2020-10-09 16:12:35.588000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:35.791000
enable_llrf, isRFOutput = True

2020-10-09 16:12:35.791000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:35.993000
enable_llrf, isRFOutput = True

2020-10-09 16:12:35.993000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:36.195000
enable_llrf, isRFOutput = True

2020-10-09 16:12:36.195000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:36.418000
enable_llrf, isRFOutput = True

2020-10-09 16:12:36.418000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:36.631000
enable_llrf, isRFOutput = True

2020-10-09 16:12:36.639000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:36.843000
enable_llrf, isRFOutput = True

2020-10-09 16:12:36.843000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:37.045000
enable_llrf, isRFOutput = True

2020-10-09 16:12:37.045000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:37.247000
enable_llrf, isRFOutput = True

2020-10-09 16:12:37.247000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:37.449000
enable_llrf, isRFOutput = True

2020-10-09 16:12:37.449000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:37.659000
enable_llrf, isRFOutput = True

2020-10-09 16:12:37.661000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:37.863000
enable_llrf, isRFOutput = True

2020-10-09 16:12:37.863000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:38.065000
enable_llrf, isRFOutput = True

2020-10-09 16:12:38.067000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:38.270000
enable_llrf, isRFOutput = True

2020-10-09 16:12:38.270000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:38.482000
enable_llrf, isRFOutput = True

2020-10-09 16:12:38.484000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:38.688000
enable_llrf, isRFOutput = True

2020-10-09 16:12:38.688000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:38.890000
enable_llrf, isRFOutput = True

2020-10-09 16:12:38.890000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:39.193000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:39.499000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:39.802000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:40.108000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:40.413000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:40.719000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:41.026000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:41.331000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:41.645000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:41.950000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:42.256000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:42.562000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:42.867000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:43.173000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:43.478000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:43.793000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:44.099000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:44.404000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:44.615000
enable_llrf, isRFOutput = True

2020-10-09 16:12:44.617000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:44.821000
enable_llrf, isRFOutput = True

2020-10-09 16:12:44.821000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:45.025000
enable_llrf, isRFOutput = True

2020-10-09 16:12:45.025000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:45.226000
enable_llrf, isRFOutput = True

2020-10-09 16:12:45.228000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:45.430000
enable_llrf, isRFOutput = True

2020-10-09 16:12:45.432000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:45.636000
enable_llrf, isRFOutput = True

2020-10-09 16:12:45.636000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:45.848000
enable_llrf, isRFOutput = True

2020-10-09 16:12:45.850000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:46.052000
enable_llrf, isRFOutput = True

2020-10-09 16:12:46.054000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:46.256000
enable_llrf, isRFOutput = True

2020-10-09 16:12:46.258000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:46.482000
enable_llrf, isRFOutput = True

2020-10-09 16:12:46.482000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:46.685000
enable_llrf, isRFOutput = True

2020-10-09 16:12:46.696000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:46.897000
enable_llrf, isRFOutput = True

2020-10-09 16:12:46.899000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:47.101000
enable_llrf, isRFOutput = True

2020-10-09 16:12:47.103000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:47.305000
enable_llrf, isRFOutput = True

2020-10-09 16:12:47.307000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:47.509000
enable_llrf, isRFOutput = True

2020-10-09 16:12:47.511000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:47.723000
enable_llrf, isRFOutput = True

2020-10-09 16:12:47.723000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:47.927000
enable_llrf, isRFOutput = True

2020-10-09 16:12:47.927000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:48.130000
enable_llrf, isRFOutput = True

2020-10-09 16:12:48.130000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:48.332000
enable_llrf, isRFOutput = True

2020-10-09 16:12:48.332000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:48.544000
enable_llrf, isRFOutput = True

2020-10-09 16:12:48.546000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:48.750000
enable_llrf, isRFOutput = True

2020-10-09 16:12:48.750000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:48.954000
enable_llrf, isRFOutput = True

2020-10-09 16:12:48.954000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:49.157000
enable_llrf, isRFOutput = True

2020-10-09 16:12:49.157000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:49.361000
enable_llrf, isRFOutput = True

2020-10-09 16:12:49.361000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:49.571000
enable_llrf, isRFOutput = True

2020-10-09 16:12:49.571000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:49.797000
enable_llrf, isRFOutput = True

2020-10-09 16:12:49.797000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:50.005000
enable_llrf, isRFOutput = True

2020-10-09 16:12:50.005000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:50.207000
enable_llrf, isRFOutput = True

2020-10-09 16:12:50.207000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:50.410000
enable_llrf, isRFOutput = True

2020-10-09 16:12:50.410000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:50.622000
enable_llrf, isRFOutput = True

2020-10-09 16:12:50.624000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:50.828000
enable_llrf, isRFOutput = True

2020-10-09 16:12:50.828000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:51.031000
enable_llrf, isRFOutput = True

2020-10-09 16:12:51.031000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:51.233000
enable_llrf, isRFOutput = True

2020-10-09 16:12:51.235000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:51.437000
enable_llrf, isRFOutput = True

2020-10-09 16:12:51.439000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:51.643000
enable_llrf, isRFOutput = True

2020-10-09 16:12:51.651000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:51.857000
enable_llrf, isRFOutput = True

2020-10-09 16:12:51.857000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:52.060000
enable_llrf, isRFOutput = True

2020-10-09 16:12:52.060000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:52.263000
enable_llrf, isRFOutput = True

2020-10-09 16:12:52.263000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:52.465000
enable_llrf, isRFOutput = True

2020-10-09 16:12:52.465000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:52.677000
enable_llrf, isRFOutput = True

2020-10-09 16:12:52.677000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:52.881000
enable_llrf, isRFOutput = True

2020-10-09 16:12:52.881000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:53.084000
enable_llrf, isRFOutput = True

2020-10-09 16:12:53.084000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:53.288000
enable_llrf, isRFOutput = True

2020-10-09 16:12:53.288000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:53.492000
enable_llrf, isRFOutput = True

2020-10-09 16:12:53.492000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:53.704000
enable_llrf, isRFOutput = True

2020-10-09 16:12:53.704000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:53.909000
enable_llrf, isRFOutput = True

2020-10-09 16:12:53.909000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:54.111000
enable_llrf, isRFOutput = True

2020-10-09 16:12:54.113000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:54.316000
enable_llrf, isRFOutput = True

2020-10-09 16:12:54.316000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:54.519000
enable_llrf, isRFOutput = True

2020-10-09 16:12:54.519000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:54.739000
enable_llrf, isRFOutput = True

2020-10-09 16:12:54.739000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:54.971000
enable_llrf, isRFOutput = True

2020-10-09 16:12:54.971000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:55.173000
enable_llrf, isRFOutput = True

2020-10-09 16:12:55.175000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:55.378000
enable_llrf, isRFOutput = True

2020-10-09 16:12:55.378000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:55.582000
enable_llrf, isRFOutput = True

2020-10-09 16:12:55.582000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:55.794000
enable_llrf, isRFOutput = True

2020-10-09 16:12:55.796000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:56
enable_llrf, isRFOutput = True

2020-10-09 16:12:56
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:56.204000
enable_llrf, isRFOutput = True

2020-10-09 16:12:56.204000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:56.428000
enable_llrf, isRFOutput = True

2020-10-09 16:12:56.428000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:56.631000
enable_llrf, isRFOutput = True

2020-10-09 16:12:56.640000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:56.846000
enable_llrf, isRFOutput = True

2020-10-09 16:12:56.846000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:57.050000
enable_llrf, isRFOutput = True

2020-10-09 16:12:57.050000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:57.253000
enable_llrf, isRFOutput = True

2020-10-09 16:12:57.253000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:57.457000
enable_llrf, isRFOutput = True

2020-10-09 16:12:57.457000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:57.671000
enable_llrf, isRFOutput = True

2020-10-09 16:12:57.671000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:57.884000
enable_llrf, isRFOutput = True

2020-10-09 16:12:57.884000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:58.088000
enable_llrf, isRFOutput = True

2020-10-09 16:12:58.088000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:58.292000
enable_llrf, isRFOutput = True

2020-10-09 16:12:58.292000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:58.494000
enable_llrf, isRFOutput = True

2020-10-09 16:12:58.494000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:58.706000
enable_llrf, isRFOutput = True

2020-10-09 16:12:58.706000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:58.910000
enable_llrf, isRFOutput = True

2020-10-09 16:12:58.910000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:59.115000
enable_llrf, isRFOutput = True

2020-10-09 16:12:59.115000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:59.319000
enable_llrf, isRFOutput = True

2020-10-09 16:12:59.319000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:59.523000
enable_llrf, isRFOutput = True

2020-10-09 16:12:59.523000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:59.737000
enable_llrf, isRFOutput = True

2020-10-09 16:12:59.737000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:12:59.941000
enable_llrf, isRFOutput = True

2020-10-09 16:12:59.941000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:00.154000
enable_llrf, isRFOutput = True

2020-10-09 16:13:00.161000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:00.377000
enable_llrf, isRFOutput = True

2020-10-09 16:13:00.377000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:00.609000
enable_llrf, isRFOutput = True

2020-10-09 16:13:00.609000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:00.825000
enable_llrf, isRFOutput = True

2020-10-09 16:13:00.825000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:01.057000
enable_llrf, isRFOutput = True

2020-10-09 16:13:01.079000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:01.295000
enable_llrf, isRFOutput = True

2020-10-09 16:13:01.295000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:01.527000
enable_llrf, isRFOutput = True

2020-10-09 16:13:01.527000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:01.743000
enable_llrf, isRFOutput = True

2020-10-09 16:13:01.743000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:01.959000
enable_llrf, isRFOutput = True

2020-10-09 16:13:01.959000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:02.182000
enable_llrf, isRFOutput = True

2020-10-09 16:13:02.182000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:02.398000
enable_llrf, isRFOutput = True

2020-10-09 16:13:02.398000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:02.614000
enable_llrf, isRFOutput = True

2020-10-09 16:13:02.614000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:02.846000
enable_llrf, isRFOutput = True

2020-10-09 16:13:02.846000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:03.062000
enable_llrf, isRFOutput = True

2020-10-09 16:13:03.062000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:03.269000
enable_llrf, isRFOutput = True

2020-10-09 16:13:03.269000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:03.501000
enable_llrf, isRFOutput = True

2020-10-09 16:13:03.501000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:03.702000
enable_llrf, isRFOutput = True

2020-10-09 16:13:03.702000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:03.918000
enable_llrf, isRFOutput = True

2020-10-09 16:13:03.918000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:04.134000
enable_llrf, isRFOutput = True

2020-10-09 16:13:04.134000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:04.366000
enable_llrf, isRFOutput = True

2020-10-09 16:13:04.366000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:04.573000
enable_llrf, isRFOutput = True

2020-10-09 16:13:04.573000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:04.789000
enable_llrf, isRFOutput = True

2020-10-09 16:13:04.789000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:04.996000
enable_llrf, isRFOutput = True

2020-10-09 16:13:04.998000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:05.201000
enable_llrf, isRFOutput = True

2020-10-09 16:13:05.201000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:05.402000
enable_llrf, isRFOutput = True

2020-10-09 16:13:05.404000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:05.607000
enable_llrf, isRFOutput = True

2020-10-09 16:13:05.607000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:05.821000
enable_llrf, isRFOutput = True

2020-10-09 16:13:05.821000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:06.024000
enable_llrf, isRFOutput = True

2020-10-09 16:13:06.024000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:06.228000
enable_llrf, isRFOutput = True

2020-10-09 16:13:06.228000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:06.452000
enable_llrf, isRFOutput = True

2020-10-09 16:13:06.452000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:06.666000
enable_llrf, isRFOutput = True

2020-10-09 16:13:06.676000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:06.878000
enable_llrf, isRFOutput = True

2020-10-09 16:13:06.878000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:07.082000
enable_llrf, isRFOutput = True

2020-10-09 16:13:07.082000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:07.285000
enable_llrf, isRFOutput = True

2020-10-09 16:13:07.285000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:07.499000
enable_llrf, isRFOutput = True

2020-10-09 16:13:07.499000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:07.710000
enable_llrf, isRFOutput = True

2020-10-09 16:13:07.712000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:07.916000
enable_llrf, isRFOutput = True

2020-10-09 16:13:07.916000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:08.118000
enable_llrf, isRFOutput = True

2020-10-09 16:13:08.118000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:08.322000
enable_llrf, isRFOutput = True

2020-10-09 16:13:08.322000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:08.525000
enable_llrf, isRFOutput = True

2020-10-09 16:13:08.525000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:08.739000
enable_llrf, isRFOutput = True

2020-10-09 16:13:08.739000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:08.942000
enable_llrf, isRFOutput = True

2020-10-09 16:13:08.942000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:09.145000
enable_llrf, isRFOutput = True

2020-10-09 16:13:09.145000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:09.348000
enable_llrf, isRFOutput = True

2020-10-09 16:13:09.348000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:09.552000
enable_llrf, isRFOutput = True

2020-10-09 16:13:09.552000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:09.763000
enable_llrf, isRFOutput = True

2020-10-09 16:13:09.763000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:09.974000
enable_llrf, isRFOutput = True

2020-10-09 16:13:09.974000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:10.176000
enable_llrf, isRFOutput = True

2020-10-09 16:13:10.178000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:10.380000
enable_llrf, isRFOutput = True

2020-10-09 16:13:10.382000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 16:13:10.584000
enable_llrf, isRFOutput = True

2020-10-09 16:13:10.584000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()
