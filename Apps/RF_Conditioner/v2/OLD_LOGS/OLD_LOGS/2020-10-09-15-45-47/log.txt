****************************************************************************************************
******************* __         __    _  _  ___       _   ___  ___   __         __ ******************
******************* \ \  ___  / /   | \| |/ _ \     /_\ | _ \/ __|  \ \  ___  / / ******************
*******************  \ \/ _ \/ /    | .` | (_) |   / _ \|   / (__    \ \/ _ \/ /  ******************
*******************   \_\___/_/     |_|\_|\___/   /_/ \_\_|_\\___|    \_\___/_/   ******************
*******************                                                               ******************
********************************************************************************
*********************** Log Started 2020-10-09-15-45-47 ************************
********************************************************************************
********************************************************************************
******************************** Configuration *********************************
********************************************************************************
config file =
C:\Users\dlerlp\Documents\GitHub\Software\Apps\RF_Conditioner\v2\CLARA_LRRG.yml
dumping parsed config data to text log
CONFIG_FILE:
C:\Users\dlerlp\Documents\GitHub\Software\Apps\RF_Conditioner\v2\CLARA_LRRG.yml,
KFPOW_MASK_TYPE: PERCENT, KRPOW_MASK_FLOOR: 1000.0, BREAKDOWN_TRACES:
['CAVITY_REVERSE_POWER', 'KLYSTRON_FORWARD_POWER', 'CAVITY_FORWARD_POWER'],
CFPHA_MEAN_END: 2.0, MAX_POW: 0.0, MAX_AMP: 120000, VAC_SPIKE_DECAY_LEVEL: 1.2,
CFPOW_MASK_WINDOW_START: 4.5, PID_on_off_GMON: CLA-GUN-H2O-PID-02:ON:RB,
KRPOW_NUM_AVERAGE_TRACES: 2, CFPHA_MASK_SET_TYPE: TIME, CPPOW_MASK_START: 0.8,
KRPOW_MASK_SET_TYPE: TIME, AMP_PWR_ACCEPTANCE_WINDOW: 750000, CPPOW_DROP_AMP:
False, CRPOW_DROP_AMP_VALUE: 2, CFPOW_MASK_FLOOR: 1000.0, CRPHA_MASK_SET_TYPE:
TIME, TEXT_LOG_FILENAME: log.txt, KFPHA_MASK_LO_MIN: 50, KRPOW_CHECK_STREAK: 2,
VAC_VALVE_CHECK_TIME: 1000, CPPOW_MASK_SET_TYPE: TIME, CFPHA_CHECK_STREAK: 2,
CPPOW_AUTO_SET: False, KFPOW_MASK_END: 3.4, CFPHA_MEAN_START: 0.0,
PID_integral_gain: CLA-GUN-H2O-PID-02:INTG:RB, KRPHA_MASK_TYPE: ABSOLUTE,
VAC_ROLLING_SUM_NUM_SAMPLES: 25, CFPOW_MASK_END: 3.5, CFPHA_NUM_AVERAGE_TRACES:
2, KRPOW_AUTO_SET: False, KRPHA_PHASE_MASK_BY_POWER_TRACE: False,
VAC_NUM_SAMPLES_TO_AVERAGE: 7, KFPHA_AUTO_SET: False, CRPOW_MASK_WINDOW_END:
4.25, CFPHA_MASK_LO_MIN: 50, SOL_CHECK_TIME: 1000, MINIMUM_COOLDOWN_TIME: 3000,
RF_STRUCTURE: CLARA_LRRG, WATER_TEMPERATURE_PV: ['CLA-GUN-RF-LRRG-01:RT', 'CLA-
GUN-RF-LRRG-02:RT'], KRPHA_CHECK_STREAK: 2, KRPOW_MASK_END: 5.0,
LLRF_CHECK_TIME: 50, KFPOW_AMPSP_RUNNING_STATS_LOG_FILENAME: amp_power_log.txt,
CPPHA_PHASE_MASK_BY_POWER_LEVEL: 5000.0, PULSE_COUNT_BREAKDOWN_LOG_FILENAME:
pulse_breakdown_log.txt, CFPOW_MASK_START: 1.5, CFPHA_AUTO_SET: False,
KRPOW_DROP_AMP_VALUE: 2, KFPHA_PHASE_MASK_BY_POWER_LEVEL: 5000.0,
CFPHA_MASK_FLOOR: 0.0, KRPHA_PHASE_MASK_BY_POWER_LEVEL: 5000.0,
CFPOW_MASK_LEVEL_LO: 10, KFPOW_MASK_WINDOW_END: 3.8, CPPHA_DROP_AMP_VALUE: 2,
OUTSIDE_MASK_FORWARD_FILENAME: outside_forward_log, KRPHA_MEAN_END: 3.0,
KFPOW_MASK_START: 1.3, KEEP_VALVE_OPEN: False, CRPHA_MASK_LO_MIN: 50,
CRPOW_MASK_FLOOR: 5000.0, SOL_WOBBLE_OSCILLATION_POINTS: 0, CRPHA_MEAN_START:
2.8, DC_PV: EBT-INJ-SCOPE-01:P1, KRPHA_MASK_FLOOR: 0.0, CPPHA_MASK_WINDOW_START:
2.4, CPPOW_MASK_TYPE: ABSOLUTE, CFPOW_MASK_LEVEL: 15, CFPHA_DROP_AMP_VALUE: 2,
CRPHA_MASK_TYPE: ABSOLUTE, TRACES_TO_SAVE: ['KLYSTRON_FORWARD_PHASE',
'KLYSTRON_REVERSE_PHASE', 'KLYSTRON_FORWARD_POWER', 'KLYSTRON_REVERSE_POWER',
'CAVITY_REVERSE_PHASE', 'CAVITY_FORWARD_PHASE', 'CAVITY_FORWARD_POWER',
'CAVITY_REVERSE_POWER'], KRPHA_MASK_WINDOW_END: 3.4, MAGNET_MACHINE_AREA:
CLARA_PH1, DC_SPIKE_DELTA: 0.015, PID_proportional_gain: CLA-GUN-H2O-
PID-02:PROP:RB, OUTSIDE_MASK_COOLDOWN_TIME: 4000, VAC_VALVE_AREA: CLARA_PH1,
SOL_WOBBLE_LO: 0.0, KRPOW_MASK_LEVEL: 35.0, KRPHA_DROP_AMP: False,
CRPHA_MASK_END: 5.0, CRPHA_MEAN_END: 3.0, KFPOW_MEAN_START: 2.0, CRPHA_DROP_AMP:
False, KFPOW_MEAN_END: 2.5, CFPOW_NUM_AVERAGE_TRACES: 2, CPPHA_MASK_END: 5.0,
VAC_VALVE: S01-VALV-01, PID_set_point: CLA-GUN-H2O-PID-02:SETVAL:RB,
CAVITY_TEMPERATURE_CHECK_TIME: 1000, CFPHA_DROP_AMP: False,
MODULATOR_CHECK_TIME: 1000, SOL_COUNT: 2, RF_REPETITION_RATE: 10,
CPPHA_MASK_WINDOW_END: 3.4, LOG_RAMP_CURVE_NUMSTEPS: 150, KFPHA_MEAN_START: 2.3,
RF_PROT_CHECK_TIME: 1000, KFPHA_MASK_TYPE: ABSOLUTE, MIN_AMP: 500,
DC_CHECK_TIME: 1000, PID_on_off: CLA-GUN-H2O-PID-02:ON:RB,
KRPHA_NUM_AVERAGE_TRACES: 2, KFPHA_MASK_FLOOR: 0.0, CRPHA_DROP_AMP_VALUE: 2,
KRPHA_MASK_WINDOW_START: 2.4, CRPOW_MASK_TYPE: PERCENT, BIN_WIDTH: 400,
KFPOW_MASK_FLOOR: 0.0, CPPOW_MASK_END: 5.0, BINARY_DATA_LOG_FILENAME: data_log,
KRPHA_MASK_LO_MIN: 50, KFPOW_MASK_LEVEL: 35.0, OUTSIDE_MASK_CHECK_TIME: 100,
MODE: OPERATIONAL, CRPOW_MASK_LO_MIN: 50, KLY_PWR_FOR_ACTIVE_PULSE: 500.0,
CFPOW_MASK_LEVEL_HI: 40, CRPHA_MASK_FLOOR: 0.0, GMON_SUFFIX: _GMON,
KFPOW_DROP_AMP_VALUE: 2, KRPOW_MEAN_END: 2.5, WHEN_VAC_HI_DISABLE_RAMP: True,
AMP_PWR_LOG_TIME: 50, VAC_SPIKE_DROP_AMP: 5, DC_SPIKE_DECAY_TIME: 2000,
CPPHA_MASK_TYPE: ABSOLUTE, KFPHA_MASK_SET_TYPE: TIME, KRPOW_MASK_WINDOW_START:
2.4, PID_derivative_gain_GMON: CLA-GUN-H2O-PID-02:DERI:RB,
SOL_WOBBLE_OSCILLATION_TIME: 100.0, PID_integral_gain_GMON: CLA-GUN-H2O-
PID-02:INTG:RB, CFPOW_MASK_SET_TYPE: TIME, CFPOW_MASK_WINDOW_END: 4.6,
LOG_DIRECTORY:
C:\Users\dlerlp\Documents\GitHub\Software\Apps\RF_Conditioner\v2\logs\,
KFPHA_MASK_LEVEL: 35.0, CAVITY_TEMPERATURE_PV: ['CLA-GUN-RF-LRRG-01:RT'],
VAC_SPIKE_DELTA: 1e-08, VAC_CHECK_TIME: 200, PID_set_point_GMON: CLA-GUN-H2O-
PID-02:SETVAL:RB, DC_DECAY_MODE: TIMED, SOL_WOBBLE_HI: 0.0,
CRPOW_MASK_WINDOW_START: 3.7, CPPHA_NUM_AVERAGE_TRACES: 2,
CRPHA_NUM_AVERAGE_TRACES: 2, NUM_BUFFER_TRACES: 500, CRPHA_MASK_LEVEL: 35.0,
CRPOW_CHECK_STREAK: 2, CPPHA_AUTO_SET: False, VAC_SHOULD_DROP_AMP: True,
KFPHA_CHECK_STREAK: 2, KRPOW_MEAN_START: 2.0, KFPOW_AUTO_SET: False,
PID_llrf_max_amp_sp_limit: CLA-GUN-LRF-CTRL-01:vm:dsp:sp_amp:amplitude:DRVH,
OUTSIDE_MASK_PROBE_FILENAME: outside_probe_log, CPPOW_MASK_FLOOR: 1000.0,
KRPOW_MASK_START: 0.8, DC_SHOULD_DROP_AMP: False, CRPOW_MEAN_START: 3.2,
CFPOW_DROP_AMP_VALUE: 6, CRPOW_MEAN_END: 3.6, GUI_UPDATE_TIME: 1000,
CPPOW_MEAN_END: 2.0, CFPOW_MEAN_START: 3.2, KFPHA_DROP_AMP_VALUE: 2,
KRPHA_DROP_AMP_VALUE: 2, CPPHA_MEAN_END: 2.0, KRPHA_MASK_LEVEL: 35.0,
PULSE_LENGTH: 2500, DEFAULT_RF_INCREASE_LEVEL: 50, KFPHA_MEAN_END: 2.75,
PID_derivative_gain: CLA-GUN-H2O-PID-02:DERI:RB, SHOULD_SOL_WOBBLE: False,
CPPOW_MEAN_START: 0.0, VAC_DECAY_MODE: LEVEL, SOL_NAMES: ['L01-SOL1',
'L01-SOL2'], PULSE_LENGTH_ERROR: 50, KFPOW_MASK_SET_TYPE: TIME,
PID_autotune_state: CLA-GUN-H2O-PID-02:ATUNE:RB, CFPOW_MASK_LO_MIN: 50,
KRPHA_MASK_END: 5.0, CPPOW_MASK_WINDOW_START: 2.4, VAC_MAX_LEVEL_FOR_RAMP:
5e-09, CFPOW_CHECK_STREAK: 2, CFPHA_MASK_LEVEL: 35.0, CRPHA_MASK_WINDOW_END:
3.4, CPPHA_CHECK_STREAK: 2, KRPHA_MEAN_START: 2.5, CPPOW_NUM_AVERAGE_TRACES: 2,
CPPHA_MASK_LEVEL: 35.0, CPPHA_DROP_AMP: False, CAV_PWR_RATIO: 2.0,
CRPHA_PHASE_MASK_BY_POWER_TRACE: False, PID_proportional_gain_GMON: CLA-GUN-H2O-
PID-02:PROP:RB, CFPHA_MASK_END: 5.0, LOG_RAMP_CURVE_RAMP_RATE: 0.2,
CRPHA_CHECK_STREAK: 2, CRPHA_MASK_START: 0.8, KFPHA_MASK_END: 5.0,
KFPHA_NUM_AVERAGE_TRACES: 2, PID_output: CLA-GUN-H2O-PID-02:OUTPUT:RB,
WATER_TEMPERATURE_PV_COUNT: 2, BREAKDOWN_RATE_AIM: 10, KRPOW_DROP_AMP: False,
LOG_RAMP_CURVE_PULSES_PER_STEP: 15, CPPHA_MASK_FLOOR: 0.0, CPPHA_MASK_SET_TYPE:
TIME, KFPHA_MASK_START: 0.8, KFPHA_PHASE_MASK_BY_POWER_TRACE: False,
WATER_TEMPERATURE_CHECK_TIME: 1000, CPPHA_PHASE_MASK_BY_POWER_TRACE: False,
CFPOW_MASK_TYPE: PERCENT, CFPHA_MASK_WINDOW_START: 2.4, KRPOW_MASK_LO_MIN: 50,
CRPOW_MASK_START: 1.2, CRPOW_MASK_SET_TYPE: TIME, CPPOW_CHECK_STREAK: 2,
CPPHA_MASK_START: 0.8, CFPOW_DROP_AMP: False, CPPHA_MASK_LO_MIN: 50,
KRPHA_AUTO_SET: False, MEAN_TRACES: ['KLYSTRON_FORWARD_POWER',
'KLYSTRON_REVERSE_POWER', 'CAVITY_FORWARD_POWER', 'CAVITY_REVERSE_POWER',
'KLYSTRON_FORWARD_PHASE', 'KLYSTRON_REVERSE_PHASE', 'CAVITY_FORWARD_PHASE',
'CAVITY_REVERSE_PHASE'], DC_SPIKE_DECAY_LEVEL: 1.2, CRPHA_MASK_WINDOW_START:
2.4, CPPOW_MASK_LO_MIN: 50, CRPOW_DROP_AMP: True, KFPOW_CHECK_STREAK: 2,
DEFAULT_PULSE_COUNT: 1000, CRPOW_NUM_AVERAGE_TRACES: 2,
VAC_SPIKE_TRACES_TO_SAVE: ['KLYSTRON_FORWARD_PHASE', 'KLYSTRON_REVERSE_PHASE',
'KLYSTRON_FORWARD_POWER', 'KLYSTRON_REVERSE_POWER', 'CAVITY_REVERSE_PHASE',
'CAVITY_FORWARD_PHASE', 'CAVITY_FORWARD_POWER', 'CAVITY_REVERSE_POWER'],
PID_output_GMON: CLA-GUN-H2O-PID-02:OUTPUT:RB, CRPOW_MASK_LEVEL: 35.0,
KFPOW_NUM_AVERAGE_TRACES: 2, BINARY_DATA_LOG_TIME: 1000, KRPHA_MASK_SET_TYPE:
TIME, KFPOW_MASK_WINDOW_START: 3.6, KFPOW_DROP_AMP: True, KRPOW_MASK_WINDOW_END:
3.4, PID_autotune_state_GMON: CLA-GUN-H2O-PID-02:ATUNE:RB,
NUM_SET_POINTS_TO_FIT: 4, CFPHA_MASK_START: 0.8, CRPOW_AUTO_SET: False,
CPPOW_MASK_LEVEL: 35.0, CPPHA_MEAN_START: 0.0, MAX_DELTA_AMP_SP: 300,
CRPHA_AUTO_SET: False, VAC_PV: CLA-LRG1-VAC-IMG-01:P, KFPOW_MASK_LO_MIN: 50,
CPPOW_DROP_AMP_VALUE: 2, CAVITY_TEMPERATURE_PV_COUNT: 1, CFPHA_MASK_TYPE:
ABSOLUTE, VAC_SPIKE_MAX_LEVEL_FOR_OFF: 2e-09, CRPHA_PHASE_MASK_BY_POWER_LEVEL:
5000.0, EXTRA_BREAKDOWN_DAQ: ['VAC_LEVEL', 'DC_LEVEL', 'BREAKDOWN_RATE',
'BREAKDOWN_COUNT'], KFPHA_MASK_WINDOW_START: 2.4, KRPHA_MASK_START: 0.8,
OUTSIDE_MASK_REVERSE_FILENAME: outside_reverse_log, CFPOW_MEAN_END: 3.6,
NUMBER_OF_PULSES_IN_BREAKDOWN_HISTORY: 100000, CFPHA_PHASE_MASK_BY_POWER_TRACE:
False, CRPOW_MASK_END: 6.0, RF_REPETITION_RATE_ERROR: 3, CFPHA_MASK_WINDOW_END:
3.4, VAC_SPIKE_DECAY_TIME: 2000, EXTRA_TRACES_ON_BREAKDOWN: 2,
DC_SPIKE_DROP_AMP: 6, CFPOW_AUTO_SET: False, KFPHA_MASK_WINDOW_END: 3.4,
KRPOW_MASK_TYPE: ABSOLUTE, DC_NUM_SAMPLES_TO_AVERAGE: 5, KFPHA_DROP_AMP: False,
LOG_RAMP_START_POWER: 30000, CPPOW_MASK_WINDOW_END: 3.4,
CFPHA_PHASE_MASK_BY_POWER_LEVEL: 5000.0,

2020-10-09 15:45:48.726000
********************************************************************************
***** src.controllers.main_controller, create rf_conditioning_data object ******
********************************************************************************

2020-10-09 15:45:48.728000
Started in debug mode = False
********************************************************************************
****************** Print Rationalized kfpow_running_stat_log  ******************
********************************************************************************
get_kfpow_running_stat_log complete

2020-10-09 15:45:51.092000
********************************************************************************
***** src.controllers.main_controller, create hardware_control_hub object ******
********************************************************************************
hardware_control_hub Starting CATAP Hardware Interfaces
start_llrf_control()  SET AMP_SP = 0, successfully created a CLARA_LRRG LLRF
control object

2020-10-09 15:46:07.971000
********************************************************************************
********** src.controllers.main_controller, create monitor_hub object **********
********************************************************************************
src.monitors.monitor_hub Starting Data Monitoring
src.monitors.monitor_hub start_llrf_monitor()

2020-10-09 15:46:09.075000
src.controllers.hardware_control_hub connected, PV = CLA-LRG1-VAC-IMG-01:P with
ID = d0,  acquiring data
src.monitors.vac_monitor will drop amp on spike detection
src.monitors.vac_monitor STARTED running
src.monitors.vac_monitor vac_spike_status = state.UNKNOWN
src.monitors.vac_monitor vac_spike_status = state.GOOD
start_vac_monitor successfully started Vacuum Monitoring
src.monitors.monitor_hub start_daq_frequency_monitor()
********************************************************************************
************************* Connecting to Water Temp PVs *************************
********************************************************************************

2020-10-09 15:46:10.178000
src.controllers.hardware_control_hub connected, PV = CLA-GUN-RF-LRRG-01:RT with
ID = d1,  acquiring data

2020-10-09 15:46:10.178000
src.monitors.vac_monitor level ok, 6.9e-10 < 5e-09

2020-10-09 15:46:10.178000
Connected to CLA-GUN-RF-LRRG-01:RT id = WATER_TEMP_ID_0
********************************************************************************
************************* Connecting to Water Temp PVs *************************
********************************************************************************

2020-10-09 15:46:11.250000
src.controllers.hardware_control_hub connected, PV = CLA-GUN-RF-LRRG-02:RT with
ID = d2,  acquiring data

2020-10-09 15:46:11.281000
Connected to CLA-GUN-RF-LRRG-02:RT id = WATER_TEMP_ID_1

2020-10-09 15:46:11.281000
start_water_temperature_monitor successfully started Water Temperature
Monitoring

2020-10-09 15:46:11.281000
src.monitors.monitor_hub start_cavity_temperature_monitor()
********************************************************************************
************************ Connecting to Cavity Temp PVs *************************
********************************************************************************

2020-10-09 15:46:12.354000
src.controllers.hardware_control_hub connected, PV = CLA-GUN-RF-LRRG-01:RT with
ID = d3,  acquiring data

2020-10-09 15:46:12.354000
Connected to CLA-GUN-RF-LRRG-01:RT id = CAVITY_TEMP_ID_0

2020-10-09 15:46:12.354000
start_cavity_temperature_monitor successfully started Cavity Temperature
Monitoring

2020-10-09 15:46:12.354000
src.monitors.monitor_hub start_solenoid_monitoring()
src.monitors.monitor_hub Sanity Check
is_vac_monitoring = True
is_llrf_monitoring = True
is_cavity_temp_monitoring = True
is_modulator_monitoring = True
is_rf_heartbeat_monitoring = True
is_sol_monitoring = True
is_rf_prot_monitoring = True
is_outside_mask_monitoring = True
is_daq_frequency_monitoring = True
is_water_temp_monitoring = True
is_vac_valve_monitor = True

2020-10-09 15:46:12.369000
********************************************************************************
********** src.data.rf_conditioning_logger start_binary_data_logging  **********
********************************************************************************
binary log file added
llrf_max_amp    p0_all  llrf_output_status      next_sp_decrease
probe_pha       rev_cav_pha     can_llrf_output_state_OLD
breakdown_rate_aim      phi_sp  latest_amp_sp_from_ramp num_outside_mask_traces
next_requested_power_change     modulator_good  p2_current_sp_to_fit
CAVITY_TEMP_ID_0        p2_current_sp   SP_QUAD_ALL     water_temp_gui
event_pulse_count_zero  max_sp_increase ramp_mode       rev_kly_pha
event_pulse_count       is_amp_ff_connected     delta_kfpow
cav_pwr_ratio_can_ramp  p1_current_sp_to_fit    vac_level
gui_can_rf_output       can_rf_output_status_OLD
bd_rate_calc_first_pulse_number cav_pwr_ratio
number_of_pulses_in_breakdown_history   probe_outside_mask_count
current_ramp_index      y_min   rev_kly_pwr     fwd_kly_pha
active_breakdown_count  last_sp_above_100       time_stamp, (start = 2020-10-09
15:46:12.432000)        TOR_SCAN        rev_cav_pwr
SP_QUAD_CURRENT_SP_TO_FIT       last_vac_spike_status   llrf_DAQ_rep_rate_status
x_max   p0_current_sp_to_fit    amp_ff  c       L01-SOL1        L01-SOL2
y_max   p1_current_sp   x_min   can_ramp_status kfpower_at_last_amp_sp
vac_level_can_ramp      last_breakdown_status   reverse_outside_mask_count
TOR_ACQM        p0_current_sp   breakdown_rate_low      WATER_TEMP_ID_1 cav_temp
fwd_cav_pha     BD_state_OLD    rfprot_good     last_amp_sp     vac_spike_status
DC_level        amp_sp  global_mask_checking    llrf_heart_beat_value
gui_can_ramp    can_llrf_output_state   p1_all  log_pulse_count
llrf_DAQ_rep_rate_aim   catap_max_amp   can_ramp_status_OLD     p2_all
fwd_kly_pwr     sol_value       log_amp_set     duplicate_pulse_count   m
pulse_count     fwd_cav_pwr     SP_SLF  WATER_TEMP_ID_0 probe_pwr
can_rf_output_status    elapsed_time    DC_spike_status pulses_to_next_ramp
GUI_mod_and_prot_good   breakdown_status        catap_max_amp_can_ramp_status
main_can_ramp   llrf_DAQ_rep_rate       vac_valve_status        SP_QUAD_CURRENT
modulator_state rev_power_spike_count   BD_state        last_ramp_method
required_pulses rfprot_state    total_breakdown_count

16      <type 'float'>  16      <type 'float'>  32      <enum 'state'>  16
<type 'float'>  16      <type 'float'>  16      <type 'float'>  32      <enum
'state'>  12      <type 'int'>    12      <type 'int'>    16      <type 'float'>
12      <type 'int'>    12      <type 'int'>    12      <type 'bool'>   16
<type 'float'>  16      <type 'float'>  16      <type 'float'>  16      <type
'float'>  16      <type 'float'>  12      <type 'int'>    16      <type 'float'>
32      <enum 'ramp_method'>    16      <type 'float'>  12      <type 'int'>
12      <type 'bool'>   16      <type 'float'>  12      <type 'bool'>   16
<type 'float'>  16      <type 'float'>  12      <type 'bool'>   32      <enum
'state'>  12      <type 'int'>    16      <type 'float'>  12      <type 'int'>
12      <type 'int'>    12      <type 'int'>    16      <type 'float'>  16
<type 'float'>  16      <type 'float'>  12      <type 'int'>    16      <type
'float'>  <type 'float'>  12      <type 'int'>    16      <type 'float'>  16
<type 'float'>  32      <enum 'state'>  32      <enum 'state'>  16      <type
'float'>  16      <type 'float'>  12      <type 'int'>    16      <type 'float'>
16      <type 'float'>  16      <type 'float'>  16      <type 'float'>  16
<type 'float'>  16      <type 'float'>  32      <enum 'state'>  16      <type
'float'>  12      <type 'bool'>   32      <enum 'state'>  12      <type 'int'>
12      <type 'int'>    16      <type 'float'>  12      <type 'bool'>   16
<type 'float'>  16      <type 'float'>  16      <type 'float'>  32      <enum
'state'>  12      <type 'bool'>   16      <type 'float'>  32      <enum 'state'>
16      <type 'float'>  16      <type 'float'>  12      <type 'bool'>   16
<type 'float'>  12      <type 'bool'>   32      <enum 'state'>  16      <type
'float'>  12      <type 'int'>    12      <type 'int'>    16      <type 'float'>
32      <enum 'state'>  16      <type 'float'>  16      <type 'float'>  16
<type 'float'>  12      <type 'int'>    12      <type 'int'>    16      <type
'float'>  12      <type 'int'>    16      <type 'float'>  16      <type 'float'>
16      <type 'float'>  16      <type 'float'>  32      <enum 'state'>  18
<type 'long'>   32      <enum 'state'>  12      <type 'int'>    12      <type
'bool'>   32      <enum 'state'>  12      <type 'bool'>   12      <type 'bool'>
16      <type 'float'>  32      <class
'VELA_CLARA_Vac_Valve_Control.VALVE_STATE'>      16      <type 'float'>  32
<class 'VELA_CLARA_RF_Modulator_Control.GUN_MOD_STATE'> 12      <type 'int'>
32      <enum 'state'>  32      <enum 'ramp_method'>    12      <type 'int'>
32      <class 'VELA_CLARA_RF_Protection_Control.RF_PROT_STATUS'>       12
<type 'int'>
src.data.rf_conditioning_data reset_event_pulse_count, new
event_pulse_count_zero = 5374972

2020-10-09 15:46:12.501000
********************************************************************************
src.controllers.main_controller The RF Conditioning is Preparing to Entering
Main_Loop !
********************************************************************************

2020-10-09 15:46:12.501000
enable_llrf, isRFOutput = False, attempting enableRFOutput()

2020-10-09 15:46:12.601000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:12.702000
enable_llrf, isPhaseFFLocked = False, attempting lockPhaseFF()

2020-10-09 15:46:12.803000
reset_daq_freg, llrf_DAQ_rep_rate_status == BAD

2020-10-09 15:46:12.903000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:13.006000
enable_llrf, isRFOutput = True

2020-10-09 15:46:13.006000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:13.312000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:13.413000
enable_llrf, isRFOutput = True

2020-10-09 15:46:13.413000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:13.717000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:13.818000
enable_llrf, isRFOutput = True

2020-10-09 15:46:13.818000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:14.122000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:14.224000
enable_llrf, isRFOutput = True

2020-10-09 15:46:14.234000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:14.538000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:14.640000
enable_llrf, isRFOutput = True

2020-10-09 15:46:14.640000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:14.943000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:15.044000
enable_llrf, isRFOutput = True

2020-10-09 15:46:15.046000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:15.351000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:15.453000
enable_llrf, isRFOutput = True

2020-10-09 15:46:15.453000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:15.756000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:15.859000
enable_llrf, isRFOutput = True

2020-10-09 15:46:15.859000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:16.163000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:16.267000
enable_llrf, isRFOutput = True

2020-10-09 15:46:16.277000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:16.582000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:16.683000
enable_llrf, isRFOutput = True

2020-10-09 15:46:16.683000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:16.988000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:17.090000
enable_llrf, isRFOutput = True

2020-10-09 15:46:17.090000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:17.393000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:17.497000
enable_llrf, isRFOutput = True

2020-10-09 15:46:17.497000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:17.801000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:17.905000
enable_llrf, isRFOutput = True

2020-10-09 15:46:17.905000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:18.208000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:18.320000
enable_llrf, isRFOutput = True

2020-10-09 15:46:18.322000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:18.627000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:18.729000
enable_llrf, isRFOutput = True

2020-10-09 15:46:18.729000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:19.033000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:19.135000
enable_llrf, isRFOutput = True

2020-10-09 15:46:19.135000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:19.440000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:19.542000
enable_llrf, isRFOutput = True

2020-10-09 15:46:19.542000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:19.845000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:19.949000
enable_llrf, isRFOutput = True

2020-10-09 15:46:19.949000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:20.251000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:20.355000
enable_llrf, isRFOutput = True

2020-10-09 15:46:20.355000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:20.660000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:20.761000
enable_llrf, isRFOutput = True

2020-10-09 15:46:20.761000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:21.063000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:21.177000
enable_llrf, isRFOutput = True

2020-10-09 15:46:21.187000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:21.501000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:21.605000
enable_llrf, isRFOutput = True

2020-10-09 15:46:21.605000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:21.918000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:22.021000
enable_llrf, isRFOutput = True

2020-10-09 15:46:22.021000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:22.324000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:22.428000
enable_llrf, isRFOutput = True

2020-10-09 15:46:22.428000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:22.731000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:22.844000
enable_llrf, isRFOutput = True

2020-10-09 15:46:22.844000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:23.156000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:23.259000
enable_llrf, isRFOutput = True

2020-10-09 15:46:23.259000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:23.562000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:23.665000
enable_llrf, isRFOutput = True

2020-10-09 15:46:23.665000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:23.968000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:24.072000
enable_llrf, isRFOutput = True

2020-10-09 15:46:24.072000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:24.378000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:24.490000
enable_llrf, isRFOutput = True

2020-10-09 15:46:24.490000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:24.795000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:24.897000
enable_llrf, isRFOutput = True

2020-10-09 15:46:24.897000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:25.200000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:25.304000
enable_llrf, isRFOutput = True

2020-10-09 15:46:25.304000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:25.607000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:25.711000
enable_llrf, isRFOutput = True

2020-10-09 15:46:25.711000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:26.015000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:26.117000
enable_llrf, isRFOutput = True

2020-10-09 15:46:26.117000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:26.423000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:26.535000
enable_llrf, isRFOutput = True

2020-10-09 15:46:26.535000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:26.838000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:26.942000
enable_llrf, isRFOutput = True

2020-10-09 15:46:26.942000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:27.245000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:27.349000
enable_llrf, isRFOutput = True

2020-10-09 15:46:27.359000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:27.662000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:27.766000
enable_llrf, isRFOutput = True

2020-10-09 15:46:27.766000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:28.071000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:28.172000
enable_llrf, isRFOutput = True

2020-10-09 15:46:28.172000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:28.474000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:28.578000
enable_llrf, isRFOutput = True

2020-10-09 15:46:28.578000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:28.881000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:28.985000
enable_llrf, isRFOutput = True

2020-10-09 15:46:28.985000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:29.287000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:29.391000
enable_llrf, isRFOutput = True

2020-10-09 15:46:29.402000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:29.707000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:29.809000
enable_llrf, isRFOutput = True

2020-10-09 15:46:29.809000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:30.113000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:30.215000
enable_llrf, isRFOutput = True

2020-10-09 15:46:30.215000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:30.518000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:30.621000
enable_llrf, isRFOutput = True

2020-10-09 15:46:30.621000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:30.923000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:31.027000
enable_llrf, isRFOutput = True

2020-10-09 15:46:31.027000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:31.331000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:31.453000
enable_llrf, isRFOutput = True

2020-10-09 15:46:31.461000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:31.766000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:31.870000
enable_llrf, isRFOutput = True

2020-10-09 15:46:31.870000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:32.172000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:32.275000
enable_llrf, isRFOutput = True

2020-10-09 15:46:32.275000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:32.580000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:32.691000
enable_llrf, isRFOutput = True

2020-10-09 15:46:32.691000
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()

2020-10-09 15:46:32.995000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:33.097000
enable_llrf, isRFOutput = True

2020-10-09 15:46:33.097000
enable_llrf, isPhaseFFLocked = True

2020-10-09 15:46:33.199000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:33.400000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:33.605000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:33.817000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:34.019000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:34.223000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:34.426000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:34.630000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:34.833000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:35.036000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:35.240000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:35.443000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:35.657000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:35.858000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:36.063000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:36.266000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:36.469000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:36.683000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:36.886000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:37.088000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:37.293000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:37.497000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:37.700000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:37.903000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:38.106000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:38.309000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:38.512000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:38.725000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:38.929000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:39.130000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:39.335000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:39.546000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:39.749000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:39.953000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:40.156000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:40.359000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:40.561000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:40.764000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:40.969000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:41.173000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:41.407000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:41.618000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:41.821000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:42.026000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:42.230000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:42.432000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:42.645000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:42.857000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:43.060000
reset_daq_freg, time passed > 0.1s

2020-10-09 15:46:43.161000
set_global_check_mask setGlobalCheckMask True
!!Log Ramp curve is NONE, generating a new one
power_finish = 7783489.91753
breakdown_rate_low = True
Breakdown rate LO, log_ramp power_finish = 7783489.91753
Log Ramp curve is NONE, generating a new one
Log Ramp curve_p_finish = 7861324.81671, p_start = 30000, p_finish =
7783489.91753, ramp_rate = 0.2
set_amp (2693.0) called from log_ramp_up
set_amp (8542.0) called from log_ramp_up
set_amp (11729.0) called from log_ramp_up
set_amp (14326.0) called from log_ramp_up
set_amp (16549.0) called from log_ramp_up
set_amp (18476.0) called from log_ramp_up
set_amp (20309.0) called from log_ramp_up
set_amp (22017.0) called from log_ramp_up
set_amp (23590.0) called from log_ramp_up
set_amp (25143.0) called from log_ramp_up
set_amp (26555.0) called from log_ramp_up
set_amp (27917.0) called from log_ramp_up
set_amp (29249.0) called from log_ramp_up
set_amp (30409.0) called from log_ramp_up
set_amp (31509.0) called from log_ramp_up
set_amp (32641.0) called from log_ramp_up
set_amp (33638.0) called from log_ramp_up
set_amp (34591.0) called from log_ramp_up
set_amp (35554.0) called from log_ramp_up
set_amp (36430.0) called from log_ramp_up
set_amp (37331.0) called from log_ramp_up
set_amp (38172.0) called from log_ramp_up
set_amp (39033.0) called from log_ramp_up
set_amp (39770.0) called from log_ramp_up
set_amp (40723.0) called from log_ramp_up
set_amp (41310.0) called from log_ramp_up
set_amp (42138.0) called from log_ramp_up
set_amp (43022.0) called from log_ramp_up
set_amp (43805.0) called from log_ramp_up
set_amp (44569.0) called from log_ramp_up
set_amp (45322.0) called from log_ramp_up
set_amp (46087.0) called from log_ramp_up
set_amp (46795.0) called from log_ramp_up
set_amp (47483.0) called from log_ramp_up
set_amp (48029.0) called from log_ramp_up
set_amp (48727.0) called from log_ramp_up
set_amp (49348.0) called from log_ramp_up
set_amp (49982.0) called from log_ramp_up
set_amp (50534.0) called from log_ramp_up
set_amp (51046.0) called from log_ramp_up
set_amp (51560.0) called from log_ramp_up
set_amp (52080.0) called from log_ramp_up
set_amp (52527.0) called from log_ramp_up
set_amp (52925.0) called from log_ramp_up
set_amp (53268.0) called from log_ramp_up
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp(53640.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (53640.0) called from log_ramp_up
set_amp (54111.0) called from log_ramp_up
set_amp (54492.0) called from log_ramp_up
set_amp (54859.0) called from log_ramp_up
set_amp (55201.0) called from log_ramp_up
set_amp (55504.0) called from log_ramp_up
set_amp (55853.0) called from log_ramp_up
set_amp (56237.0) called from log_ramp_up
set_amp (56710.0) called from log_ramp_up
set_amp (57120.0) called from log_ramp_up
set_amp (57408.0) called from log_ramp_up
set_amp (57709.0) called from log_ramp_up
set_amp (58158.0) called from log_ramp_up
set_amp (58430.0) called from log_ramp_up
set_amp (58589.0) called from log_ramp_up
set_amp (58780.0) called from log_ramp_up
set_amp (59053.0) called from log_ramp_up
set_amp (59258.0) called from log_ramp_up
set_amp (59444.0) called from log_ramp_up
set_amp (59675.0) called from log_ramp_up
set_amp (59922.0) called from log_ramp_up
enable_llrf, isRFOutput = False, attempting enableRFOutput()
enable_llrf, isAmpFFLocked = False, attempting lockAmpFF()
enable_llrf, isPhaseFFLocked = False, attempting lockPhaseFF()
set_global_check_mask setGlobalCheckMask False
set_global_check_mask setGlobalCheckMask True
set_amp (60170.0) called from log_ramp_up
set_amp (60420.0) called from log_ramp_up
set_amp (60673.0) called from log_ramp_up
set_amp (60958.0) called from log_ramp_up
set_amp (61156.0) called from log_ramp_up
set_amp (61266.0) called from log_ramp_up
set_amp (61373.0) called from log_ramp_up
set_amp (61477.0) called from log_ramp_up
set_amp (61568.0) called from log_ramp_up
set_amp (61654.0) called from log_ramp_up
set_amp (61737.0) called from log_ramp_up
set_amp (61817.0) called from log_ramp_up
set_amp (61896.0) called from log_ramp_up
set_amp (63048.0) called from log_ramp_up
set_amp (63198.0) called from log_ramp_up
set_amp (63375.0) called from log_ramp_up
set_amp (63522.0) called from log_ramp_up
set_amp (63600.0) called from log_ramp_up
set_amp (63676.0) called from log_ramp_up
set_amp (63750.0) called from log_ramp_up
set_amp (63822.0) called from log_ramp_up
set_amp (63891.0) called from log_ramp_up
set_amp (63951.0) called from log_ramp_up
set_amp (64007.0) called from log_ramp_up
set_amp (64062.0) called from log_ramp_up
set_amp (64115.0) called from log_ramp_up
set_amp (64166.0) called from log_ramp_up
set_amp (64216.0) called from log_ramp_up
set_amp (64264.0) called from log_ramp_up
set_amp (65109.0) called from log_ramp_up
set_amp (65148.0) called from log_ramp_up
set_amp (65186.0) called from log_ramp_up
set_amp (65224.0) called from log_ramp_up
set_amp (65260.0) called from log_ramp_up
set_amp (65294.0) called from log_ramp_up
set_amp (65328.0) called from log_ramp_up
set_amp (65361.0) called from log_ramp_up
set_amp (65393.0) called from log_ramp_up
set_amp (65424.0) called from log_ramp_up
set_amp (65453.0) called from log_ramp_up
set_amp (65482.0) called from log_ramp_up
set_amp (65580.0) called from log_ramp_up
set_amp (65778.0) called from log_ramp_up
set_amp (65940.0) called from log_ramp_up
set_amp (66047.0) called from log_ramp_up
set_amp (66151.0) called from log_ramp_up
set_amp (66251.0) called from log_ramp_up
set_amp (66347.0) called from log_ramp_up
set_amp (66439.0) called from log_ramp_up
set_amp (66528.0) called from log_ramp_up
set_amp (66615.0) called from log_ramp_up
set_amp (66699.0) called from log_ramp_up
set_amp (66751.0) called from log_ramp_up
set_amp (66801.0) called from log_ramp_up
set_amp (66850.0) called from log_ramp_up
set_amp (66898.0) called from log_ramp_up
set_amp (66944.0) called from log_ramp_up
set_amp (66988.0) called from log_ramp_up
set_amp (67032.0) called from log_ramp_up
set_amp (67074.0) called from log_ramp_up
set_amp (67138.0) called from log_ramp_up
set_amp (67240.0) called from log_ramp_up
set_amp (67338.0) called from log_ramp_up
set_amp (67434.0) called from log_ramp_up
set_amp (67510.0) called from log_ramp_up
set_amp (67543.0) called from log_ramp_up
set_amp (67575.0) called from log_ramp_up
set_amp (67607.0) called from log_ramp_up
set_amp (67637.0) called from log_ramp_up
set_amp (67666.0) called from log_ramp_up
set_amp (67695.0) called from log_ramp_up
set_amp (67723.0) called from log_ramp_up
set_amp (67750.0) called from log_ramp_up
set_amp (67776.0) called from log_ramp_up
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
set_amp(67801.0), FAILED to set amp in less than 3 seconds averages NOT reset,
mask_set = False
we failed to set the requested amplitude .... erm.... not sure what to do ????
*** LAST TIME THIS HAPPENED THE LIBERA AMP_SP HARD LIMIT WAS REACHED (10000) -
LSC can change this ***
set_amp (67801.0) called from log_ramp_up
