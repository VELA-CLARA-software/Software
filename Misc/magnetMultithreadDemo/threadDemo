# run this file to show how the in built c++ setSI wit a wait time freezes the GUI becuse the GIL means python is waiting for c++ to finish
# basically, don;t do things this way..

import sys
sys.path.append('\\\\fed.cclrc.ac.uk\\org\\NLab\\ASTeC\\Projects\\VELA\\Software\\VELA_CLARA_PYDs\\bin\\stage\\')

import VELA_CLARA_MagnetControl as mag

from PyQt4 import QtGui, QtCore
import sys
from  design import GUI
class mainController():

    def __init__(self):
        #super(self.__class__, self).__init__()
        self.counter = 0
        self.view = GUI()
        self.view.show()
        self.view.btn_start.clicked.connect(self.printMessage)
        self.view.btn_setSI.clicked.connect(self.setSI)
        self.mc = magnetController()
        self.worker_thread = QtCore.QThread()
        self.mc.moveToThread(self.worker_thread)

    def printMessage(self):
        self.counter +=1
        self.view.list_submissions.addItem("It is working: " + str(self.counter))

    def setSI(self):
        self.view.list_submissions.addItem("Setting SI ")
        self.worker_thread.started.connect(self.mc.setSI)
        self.worker_thread.start()

class magnetController(QtCore.QObject):
    def __init__(self):
        super(magnetController, self).__init__()
        self.magInit = mag.init()
        self.localMagnetController = self.magInit.virtual_VELA_INJ_Magnet_Controller()

    def setSI(self):
        self.localMagnetController.setSI("QUAD01", 10.0, 0.1, 30)
        print 'finished'

class App(QtGui.QApplication):
    def __init__(self,argv):
        # seems you need this init line here to instantiate a QTApplication
        QtGui.QWidget.__init__(self,argv)
        # Everything else is handled by the controller
        self.controller = mainController()

if __name__ == '__main__':
    print 'thread demo'
    app = App(sys.argv)
    sys.exit(app.exec_())

