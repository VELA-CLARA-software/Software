function [ optics ] = CalculateOptics( betax, alphax, betay, alphay, QuadCurrents, BeamMomentum )

    gammax = (1 + alphax^2)/betax;
    gammay = (1 + alphay^2)/betay;

    csScrn2   = [betax,  -alphax,  0,       0      ;...
                -alphax,  gammax,  0,       0      ;...
                 0,          0,    betay,  -alphay ;...
                 0,          0,   -alphay,  gammay];

    nrmScrn2  = [1/sqrt(betax),      0,           0,                  0           ;...
                 alphax/sqrt(betax), sqrt(betax), 0,                  0           ;...
                 0,                  0,           1/sqrt(betay),      0           ;...
                 0,                  0,           alphay/sqrt(betay), sqrt(betay)];

    optics    = zeros(size(QuadCurrents,1),14);

    for n = 1:size(QuadCurrents,1)

        quadStrengths = I2K_CLARA(QuadCurrents(n,:),BeamMomentum);

        m = TransferMatrixQuadScan(quadStrengths);

        cs3 = m*csScrn2*m';

        nrmScrn3  = [1/sqrt(cs3(1,1)),        0,              0,                       0;...
                    -cs3(1,2)/sqrt(cs3(1,1)), sqrt(cs3(1,1)), 0,                       0;...
                     0,                       0,              1/sqrt(cs3(3,3)),        0;...
                     0,                       0,             -cs3(3,4)/sqrt(cs3(3,3)), sqrt(cs3(3,3))];

        r = nrmScrn3*m/nrmScrn2;
        
        mux = atan2(r(1,2),r(1,1));
        if mux<0
            mux = mux + 2*pi;
        end
        
        muy = atan2(r(3,4),r(3,3));
        if muy<0
            muy = muy + 2*pi;
        end

        optics(n,:) = [cs3(1,1), -cs3(1,2), cs3(3,3), -cs3(3,4),...
                       mux, muy,...
                       m(1,1), m(1,2), m(2,1), m(2,2),...
                       m(3,3), m(3,4), m(4,3), m(4,4)];

    end

return

% Beta_x_y_at_observation_point  = csScrn3(:,[1 3]);
% Alpha_x_y_at_observation_point = csScrn3(:,[2 4]);
% PhaseAdvance_x_y               = csScrn3(:,[5 6]);
% 
% save('Data 2019-03-04/ImageFileInformation_Iterated.mat',...
%     'Beta_x_y_at_reconstruction_point',...
%     'Alpha_x_y_at_reconstruction_point',...
%     'Beta_x_y_at_observation_point',...
%     'Alpha_x_y_at_observation_point',...
%     'PhaseAdvance_x_y',...
%     'Image_and_background_filenames_at_reconstruction_point',...
%     'Image_and_background_filenames_at_observation_point',...
%     'QuadCurrents');

